{
  "swagger": "2.0",
  "info": {
    "contact": {}
  },
  "paths": {
    "/app-eda/additional-document-master-data": {
      "get": {
        "description": "Get list of additional document master data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "additional-document-master-data"
        ],
        "summary": "Get additional document master data",
        "parameters": [
          {
            "type": "string",
            "name": "document_type",
            "in": "query"
          },
          {
            "enum": [
              "customers",
              "properties",
              "occupations",
              "loan_applications"
            ],
            "type": "string",
            "name": "group",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.AdditionalDocumentMasterDataResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/api/v1/fineract/loans/{id}/debt-consolidation/order": {
      "patch": {
        "description": "Update debt consolidations order by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Update debt consolidations order",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Debt consolidation order request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/request.FineractDebtConsoleRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/bank": {
      "get": {
        "description": "Get list of all banks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "bank"
        ],
        "summary": "Get all banks",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.BankResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/callback/iluma/bank-account-validation": {
      "post": {
        "description": "Callback endpoint for Iluma bank account validation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "callback"
        ],
        "summary": "Callback for bank account validation",
        "parameters": [
          {
            "type": "string",
            "description": "Callback token",
            "name": "X-CALLBACK-TOKEN",
            "in": "header",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/integrations.ValidateBankAccountResponse"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/document": {
      "post": {
        "description": "Create a new document",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "document"
        ],
        "summary": "Create a new document",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.CreateDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.BasicDocumentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/document/{id}": {
      "delete": {
        "description": "Delete a document by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "document"
        ],
        "summary": "Delete a document",
        "parameters": [
          {
            "type": "string",
            "description": "Document ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/active-statement/{id}": {
      "get": {
        "description": "Get active statement by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get active statement",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/charges": {
      "get": {
        "description": "Get charges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get charges",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/datatable-info/{id}": {
      "get": {
        "description": "Get datatable info by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get datatable info",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/datatable-loan-extra-configuration-by-loan-id/{id}": {
      "put": {
        "description": "Update datatable loan extra configuration by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Update datatable loan extra configuration by loan ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Loan extra configuration request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.FineractDatatableLoanExtraConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/datatable-loan-extra-configuration/{id}": {
      "get": {
        "description": "Get datatable loan extra configuration by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get datatable loan extra configuration",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "put": {
        "description": "Update datatable loan extra configuration by Fineract Loan ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Update datatable loan extra configuration",
        "parameters": [
          {
            "type": "string",
            "description": "Fineract Loan ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Loan extra configuration request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.FineractDatatableLoanExtraConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Create datatable loan extra configuration by Fineract Loan ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Create datatable loan extra configuration",
        "parameters": [
          {
            "type": "string",
            "description": "Fineract Loan ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Loan extra configuration request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.FineractDatatableLoanExtraConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/debt-consolidation/verify-bank-account/{id}/{debt_console_id}": {
      "post": {
        "description": "Verify debt consolidation bank account by loan application ID and debt console ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Verify debt consolidation bank account",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Debt Console ID",
            "name": "debt_console_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/debt-consolidation/{id}": {
      "post": {
        "description": "Create debt consolidation by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Create debt consolidation",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Debt consolidation request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.FineractLoanDebtConsolidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/debt-consolidation/{id}/{debt_console_id}": {
      "put": {
        "description": "Update debt consolidation by loan application ID and debt console ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Update debt consolidation",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Debt Console ID",
            "name": "debt_console_id",
            "in": "path",
            "required": true
          },
          {
            "description": "Debt consolidation request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.FineractLoanDebtConsolidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/debt-consolidations/{id}": {
      "get": {
        "description": "Get debt consolidations by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get debt consolidations",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/loan-extra-configuration-template/{id}": {
      "get": {
        "description": "Get loan extra configuration template by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get loan extra configuration template",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/loan-template/{id}": {
      "get": {
        "description": "Get loan template by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get loan template",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/loan/{id}": {
      "get": {
        "description": "Get loan by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get loan",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Associations",
            "name": "associations",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Exclude",
            "name": "exclude",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/repayment-schedule/{id}": {
      "get": {
        "description": "Get repayment schedule by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get repayment schedule",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/statement-detail/{id}": {
      "get": {
        "description": "Get statement detail by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Get statement detail by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/submit-loan/{id}": {
      "post": {
        "description": "Submit loan by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Submit loan",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Loan request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.FineractLoanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/fineract/update-loan/{id}": {
      "put": {
        "description": "Update loan by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "fineract"
        ],
        "summary": "Update loan",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Loan request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.FineractLoanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application": {
      "post": {
        "description": "Submit a new loan application",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit a new loan application",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitLoanApplication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application-reason": {
      "get": {
        "description": "Get all loan application reasons",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-reason"
        ],
        "summary": "Get all loan application reasons",
        "parameters": [
          {
            "type": "string",
            "name": "status_id",
            "in": "query"
          },
          {
            "enum": [
              "rejected",
              "canceled"
            ],
            "type": "string",
            "name": "status_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.LoanApplicationReasonCategorizedResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application-status": {
      "get": {
        "description": "Get all loan application statuses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-status"
        ],
        "summary": "Get all loan application statuses",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application-status/order-by-sequence": {
      "get": {
        "description": "Get loan application statuses ordered by sequence",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-status"
        ],
        "summary": "Get loan application statuses ordered by sequence",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application-status/permission": {
      "get": {
        "description": "Get permission loan application statuses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-status"
        ],
        "summary": "Get permission loan application statuses",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.LoanApplicationStatusResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/basic-by-phone/{phoneNumber}": {
      "get": {
        "description": "Get basic loan applications by phone number",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get basic loan applications by phone number",
        "parameters": [
          {
            "type": "string",
            "description": "Phone Number",
            "name": "phoneNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/by-customer/{customerId}": {
      "get": {
        "description": "Get loan application by customer ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application by customer ID",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/crm-emergency-contacts/{customerId}": {
      "post": {
        "description": "Create CRM emergency contacts by customer ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Create CRM emergency contacts by customer ID",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/crm-property-asset/{customerId}": {
      "post": {
        "description": "Create CRM property asset by customer ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Create CRM property asset by customer ID",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "patch": {
        "description": "Update CRM property asset by customer ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update CRM property asset by customer ID",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/document-borrower-sign-credit-agreement/{globalTrxID}": {
      "get": {
        "description": "Get borrower signed credit agreement document by global transaction ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get borrower signed credit agreement document",
        "parameters": [
          {
            "type": "string",
            "description": "Global Transaction ID",
            "name": "globalTrxID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.BorrowerCreditAggrementDocumentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/document-lender-sign-credit-agreement/{id}": {
      "get": {
        "description": "Get lender signed credit agreement document by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get lender signed credit agreement document",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.BasicDocumentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/document-sign-credit-agreement-template/{id}": {
      "get": {
        "description": "Get signed credit agreement document template by document ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get signed credit agreement document template",
        "parameters": [
          {
            "type": "string",
            "description": "Document ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.DocumentSignCreditAgreementTemplateResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/document-sign-credit-agreement/{id}": {
      "get": {
        "description": "Get signed credit agreement document by document ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get signed credit agreement document",
        "parameters": [
          {
            "type": "string",
            "description": "Document ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.BasicDocumentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/documents": {
      "get": {
        "description": "Get documents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get documents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.BasicDocumentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/documents/by-types": {
      "post": {
        "description": "Get loan application documents by document types",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application documents by document types",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.GetLoanApplicationDocumentsByDocumentTypes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.BasicDocumentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/express-process": {
      "post": {
        "description": "Submit loan express process",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit loan express process",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitLoanApplicationExpressProcess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/global-trx/{globalTrxID}": {
      "get": {
        "description": "Get loan application by global transaction ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application by global transaction ID",
        "parameters": [
          {
            "type": "string",
            "description": "Global Transaction ID",
            "name": "globalTrxID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/id/{id}": {
      "get": {
        "description": "Get loan application by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/loan-purposes": {
      "get": {
        "description": "Get loan application loan purposes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application loan purposes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.LoanPurposeResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "patch": {
        "description": "Update loan application loan purposes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application loan purposes",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.LoanApplicationLoanPurposesBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/loan-purposes/documents": {
      "get": {
        "description": "Get loan application loan purposes documents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application loan purposes documents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.BasicDocumentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/marketplace": {
      "get": {
        "description": "Get all loan application marketplace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get all loan application marketplace",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.PaginatorResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/multi-loan-process": {
      "post": {
        "description": "Submit multi loan process",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit multi loan process",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitMultiLoanProcess"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/reset-ekyc": {
      "post": {
        "description": "Reset eKYC by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Reset eKYC",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.ResetEKycRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/self-declared-payment-bandwidth/{customerId}": {
      "get": {
        "description": "Get loan application self-declared payment bandwidth by customer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application self-declared payment bandwidth by customer",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "patch": {
        "description": "Update loan application self-declared payment bandwidth by customer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application self-declared payment bandwidth by customer",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateSelfDeclaredPaymentBandwidth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/shield": {
      "get": {
        "description": "Get all loan applications SHIELD with pagination",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get all loan applications SHIELD",
        "parameters": [
          {
            "type": "integer",
            "description": "Page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.PaginatorResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/snapshot/{customerId}": {
      "put": {
        "description": "Upsert loan application snapshot by customer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Upsert loan application snapshot by customer",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpsertLoanApplicationSnapshotByCustomerBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/submit-from-partner": {
      "post": {
        "description": "Submit loan application from partner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit loan application from partner",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitLoanApplicationFromPartner"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.BasicLoanApplicationResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/submit-revision/{globalTrxID}": {
      "post": {
        "description": "Submit loan application revision by global transaction ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit loan application revision by global transaction ID",
        "parameters": [
          {
            "type": "string",
            "description": "Global Transaction ID",
            "name": "globalTrxID",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitLoanApplicationRevision"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/update-dtto-matrix": {
      "patch": {
        "description": "Update DTTO matrix rules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update DTTO matrix rules",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/user": {
      "get": {
        "description": "Get all loan applications by user with pagination",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get all loan applications by user (paginated)",
        "parameters": [
          {
            "type": "integer",
            "description": "Page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.PaginatorResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/user/{id}": {
      "get": {
        "description": "Get all loan applications by user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get all loan applications by user",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{globalTrxID}/customer-emergency-contact": {
      "post": {
        "description": "Create customer emergency contact by global transaction ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Create customer emergency contact",
        "parameters": [
          {
            "type": "string",
            "description": "Global Transaction ID",
            "name": "globalTrxID",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.CreateCustomerEmergencyContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{globalTrxID}/status": {
      "patch": {
        "description": "Update loan application status by global transaction ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application status",
        "parameters": [
          {
            "type": "string",
            "description": "Global Transaction ID",
            "name": "globalTrxID",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateLoanApplicationStatusBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{globalTrxID}/supporting-document-readiness": {
      "get": {
        "description": "Get supporting document readiness by global transaction ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get supporting document readiness by global transaction ID",
        "parameters": [
          {
            "type": "string",
            "description": "Global Transaction ID",
            "name": "globalTrxID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Submit supporting document readiness by global transaction ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit supporting document readiness by global transaction ID",
        "parameters": [
          {
            "type": "string",
            "description": "Global Transaction ID",
            "name": "globalTrxID",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitSupportingDocumentReadinessBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{globalTrxID}/supporting-document-types": {
      "post": {
        "description": "Submit supporting document types by global transaction ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit supporting document types by global transaction ID",
        "parameters": [
          {
            "type": "string",
            "description": "Global Transaction ID",
            "name": "globalTrxID",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitSupportingDocumentTypes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/accept-offer": {
      "post": {
        "description": "Accept loan application offer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Accept loan application offer",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.AcceptLoanApplicationOffer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/activity-check": {
      "get": {
        "description": "Get application activity check by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get application activity check",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.LoanApplicationActivityCheckResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/appraisal": {
      "get": {
        "description": "Get application appraisal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get application appraisal",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.ApplicationAppraisalResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Submit application appraisal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit application appraisal",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitApplicationAppraisal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/certificate": {
      "get": {
        "description": "Get application certificate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get application certificate",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.BasicDocumentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Submit application certificate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit application certificate",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitApplicationCertificate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/certificate/v2": {
      "get": {
        "description": "Get application certificate V2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get application certificate V2",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.LoanApplicationCertificationCheckResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/check-document-collection-stage-readiness": {
      "post": {
        "description": "Check document collection stage readiness by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Check document collection stage readiness",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/confirm-borrower-signed": {
      "post": {
        "description": "Confirm borrower signed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Confirm borrower signed",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.ConfirmBorrowerSigned"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/contract-participant": {
      "get": {
        "description": "Get loan contract participants by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-contract-participant"
        ],
        "summary": "Get loan contract participants by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Create a new loan contract participant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-contract-participant"
        ],
        "summary": "Create loan contract participant",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.InsertLoanApplicationContractParticipantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "delete": {
        "description": "Delete a loan contract participant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-contract-participant"
        ],
        "summary": "Delete loan contract participant",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.DeleteLoanApplicationContractParticipantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/credit-analyst-activity": {
      "get": {
        "description": "Get loan application credit analyst activity by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application credit analyst activity",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.LoanApplicationCreditAnalystActivityResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "patch": {
        "description": "Update loan application credit analyst activity by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application credit analyst activity",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.LoanApplicationCreditAnalystActivityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/credit-memo": {
      "get": {
        "description": "Get credit memo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get credit memo",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.DBRCalculation"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/customer-emergency-contact-from-partner": {
      "post": {
        "description": "Create customer emergency contact from partner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Create customer emergency contact from partner",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.CreateCustomerEmergencyContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/dbr-ltv": {
      "get": {
        "description": "Get loan application DBR LTV by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application DBR LTV by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.LoanApplicationDbrLtvResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/debt-consolidation": {
      "get": {
        "description": "Get loan debt consolidations by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-debt-consolidation"
        ],
        "summary": "Get loan debt consolidations by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Create a new loan debt consolidation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-debt-consolidation"
        ],
        "summary": "Create loan debt consolidation",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.InsertLoanApplicationDebtConsolidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "delete": {
        "description": "Delete a loan debt consolidation participant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-debt-consolidation"
        ],
        "summary": "Delete loan debt consolidation",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.DeleteLoanApplicationDebtConsolidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/ekyc": {
      "post": {
        "description": "Submit eKYC",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit eKYC",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateSelfieImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/entity.IdentityVerificationSummary"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/identity-verification": {
      "put": {
        "description": "Upsert identity verification data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Upsert identity verification data",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpsertIdentityVerificationDataBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/identity-verifications": {
      "get": {
        "description": "Get identity verifications by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get identity verifications by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/insurance-policy": {
      "get": {
        "description": "Get loan application insurance policy by loan ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-insurance-policy"
        ],
        "summary": "Get loan application insurance policy by loan ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.BasicLoanApplicationInsurancePolicyResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Create or update loan application insurance policy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-insurance-policy"
        ],
        "summary": "Upsert loan application insurance policy",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.LoanApplicationInsurancePolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/latest-verification-identity": {
      "get": {
        "description": "Get latest loan application verification identity by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get latest loan application verification identity by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/manual-trigger-status-automation": {
      "post": {
        "description": "Manual trigger status automation by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Manual trigger status automation",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/multi-loan-state": {
      "get": {
        "description": "Get multi loan state by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get multi loan state",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/offer-document-data": {
      "get": {
        "description": "Get offer document data by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get offer document data by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/offer-letter": {
      "get": {
        "description": "Get offer letter document by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get offer letter document by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.BasicDocumentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/process-borrower-credit-agreement": {
      "post": {
        "description": "Process loan application borrower credit agreement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Process loan application borrower credit agreement",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.ProcessLoanApplicationBorrowerCreditAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/profile-screening": {
      "get": {
        "description": "Get profile screening by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get profile screening by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/proposal-document": {
      "get": {
        "description": "Get loan proposal document by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan proposal document by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.BasicDocumentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/required-additional-docs": {
      "get": {
        "description": "Get required additional docs by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get required additional docs by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "With Pre-sign URL",
            "name": "withPresignUrl",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.LoanApplicationRequiredAdditionalDocAggregateResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Upsert required additional docs by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Upsert required additional docs by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.LoanAdditionalDoc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/required-additional-docs-submit-time": {
      "patch": {
        "description": "Update submit time for required additional docs by action type",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update submit time for required additional docs by action type",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateLoanRequiredAdditionalDocsSubmitTimeByActionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/required-additional-docs-summary": {
      "get": {
        "description": "Get required additional docs summary by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get required additional docs summary by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/revision": {
      "patch": {
        "description": "Update loan application revision by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application revision",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateLoanApplicationRevision"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/revision/completed": {
      "patch": {
        "description": "Update loan application revision completed by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application revision completed",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/revived": {
      "post": {
        "description": "Create or update loan application revived",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application-revived"
        ],
        "summary": "Upsert loan application revived",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.LoanApplicationRevivedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/scenario": {
      "post": {
        "description": "Upsert loan scenario by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Upsert loan scenario by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.LoanScenario"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/screening-estimate-offer-matrix": {
      "get": {
        "description": "Get screening estimate offer matrix by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get screening estimate offer matrix by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.ScreeningEstimateOfferMatrixResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/sign-borrower-credit-agreement": {
      "post": {
        "description": "Sign loan application borrower credit agreement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Sign loan application borrower credit agreement",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SignBorrowerCreditAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/sign-credit-agreement": {
      "post": {
        "description": "Sign loan application credit agreement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Sign loan application credit agreement",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SignCreditAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/status": {
      "patch": {
        "description": "Update loan application status by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application status by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateLoanApplicationStatusBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/summary": {
      "get": {
        "description": "Get loan application summary by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application summary by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.LoanApplicationSummaryResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/supporting-document-readiness": {
      "get": {
        "description": "Get supporting document readiness by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get supporting document readiness by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Submit supporting document readiness by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit supporting document readiness by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitSupportingDocumentReadinessBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/supporting-document-types": {
      "post": {
        "description": "Submit supporting document types by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit supporting document types by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitSupportingDocumentTypes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/sync-crm-object": {
      "post": {
        "description": "Sync CRM object by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Sync CRM object by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/verification": {
      "get": {
        "description": "Get application verification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get application verification",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.BasicDocumentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Submit application verification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Submit application verification",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.SubmitApplicationVerification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/verification-document": {
      "get": {
        "description": "Get verification document by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get verification document by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.BasicDocumentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/verified-income": {
      "patch": {
        "description": "Update loan application verified income",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application verified income",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateLoanApplicationVerifiedIncome"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/verified-property": {
      "patch": {
        "description": "Update loan application verified property",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Update loan application verified property",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateLoanApplicationVerifiedProperty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{id}/with-customer": {
      "get": {
        "description": "Get loan application by ID with customer data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Get loan application by ID with customer",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-application/{userId}/verify-customer-identity": {
      "post": {
        "description": "Verify loan application customer identity by user ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-application"
        ],
        "summary": "Verify loan application customer identity",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.VerifyLoanApplicationCustomerIdentityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-purpose": {
      "get": {
        "description": "Get list of all loan purposes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-purpose"
        ],
        "summary": "Get all loan purposes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.LoanPurposeResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/loan-purpose/partner": {
      "get": {
        "description": "Get list of all loan purposes from partner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "loan-purpose"
        ],
        "summary": "Get all loan purposes from partner",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.LoanPurposeResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/payment/validate": {
      "post": {
        "description": "Validate a payment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "payment-validation"
        ],
        "summary": "Validate payment",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.PaymentValidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.PaymentValidationResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/payment/validate/{id}": {
      "get": {
        "description": "Get payment validation by ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "payment-validation"
        ],
        "summary": "Get payment validation by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Payment Validation ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.PaymentValidationResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/revision-master-data": {
      "get": {
        "description": "Get list of revision master data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "revision-master-data"
        ],
        "summary": "Get revision master data",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/dto.RevisionMasterDataResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/root/mobile-keys": {
      "get": {
        "description": "Get mobile keys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "root"
        ],
        "summary": "Get mobile keys",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/root/mobile-keys/auth": {
      "get": {
        "description": "Get mobile keys with authentication key",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "root"
        ],
        "summary": "Get mobile keys with auth key",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/credit-analyst": {
      "patch": {
        "description": "Update credit analyst by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Update credit analyst by loan application ID",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateSalesEvaluationCreditAnalyst"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/relationship-manager": {
      "patch": {
        "description": "Update relationship manager by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Update relationship manager by loan application ID",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpdateSalesEvaluationRelationshipManager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/signing-survey-schedule/confirm": {
      "post": {
        "description": "Confirm signing survey schedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Confirm signing survey schedule",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpsertSigningSurveySchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/signing-survey-schedule/{id}": {
      "get": {
        "description": "Get signing survey schedule by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Get signing survey schedule",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.SigningSurveyScheduleResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/survey-result/{id}": {
      "patch": {
        "description": "Update survey result by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Update survey result by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.LoanApplicationSurveyResultRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/survey-schedule/confirm": {
      "post": {
        "description": "Confirm survey schedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Confirm survey schedule",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpsertSurveyScheduleDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/survey-schedule/propose": {
      "post": {
        "description": "Propose survey schedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Propose survey schedule",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.UpsertSurveyProposedDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/survey-schedule/{id}": {
      "get": {
        "description": "Get survey schedule by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Get survey schedule",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.SurveySchedule"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/sales-evaluation/survey/{id}": {
      "get": {
        "description": "Get survey by loan application ID",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "sales-evaluation"
        ],
        "summary": "Get survey by loan application ID",
        "parameters": [
          {
            "type": "string",
            "description": "Loan Application ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/dto.SurveyAggregateResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/screening-matrix/automation-status": {
      "get": {
        "description": "Get automation status for screening matrix",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "screening-matrix"
        ],
        "summary": "Get automation status",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "patch": {
        "description": "Patch automation status for screening matrix",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "screening-matrix"
        ],
        "summary": "Patch automation status",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScreeningMatrixAutomationStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/screening-matrix/enumeration-types": {
      "get": {
        "description": "Get enumeration types for screening matrix rules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "screening-matrix"
        ],
        "summary": "Get enumeration types for screening matrix",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/screening-matrix/profile-rules": {
      "get": {
        "description": "Get all profile rules for screening matrix",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "screening-matrix"
        ],
        "summary": "Get all profile rules",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Upsert profile rules for screening matrix",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "screening-matrix"
        ],
        "summary": "Upsert profile rules",
        "parameters": [
          {
            "description": "Request body",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/request.ScreeningProfileMatrixRules"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/screening-matrix/profile-rules/{id}": {
      "get": {
        "description": "Get profile rules by ID for screening matrix",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "screening-matrix"
        ],
        "summary": "Get profile rules by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Rules ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "delete": {
        "description": "Delete profile rules by ID for screening matrix",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "screening-matrix"
        ],
        "summary": "Delete profile rules by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Rules ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/app-eda/screening-matrix/profile-rules/{id}/activate": {
      "post": {
        "description": "Activate profile rules for screening matrix",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "screening-matrix"
        ],
        "summary": "Activate profile rules",
        "parameters": [
          {
            "type": "string",
            "description": "Rules ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/auth/api/v1/admins": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.AdminResponse"
              }
            }
          }
        }
      },
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/admins/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.AdminResponse"
            }
          }
        }
      },
      "delete": {
        "responses": {}
      },
      "patch": {
        "responses": {}
      }
    },
    "/auth/api/v1/change-password": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/deactivate": {
      "delete": {
        "responses": {}
      }
    },
    "/auth/api/v1/emergency-login": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/forgot-password": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/forgot-password-request": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/lenders": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "reference_ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.LenderResponse"
              }
            }
          }
        }
      },
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/lenders/member/{reference_id}": {
      "put": {
        "responses": {}
      }
    },
    "/auth/api/v1/lenders/members/{company_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicAdminResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/lenders/{reference_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.BasicAdminResponse"
            }
          }
        }
      }
    },
    "/auth/api/v1/lenders/{user_id}": {
      "put": {
        "responses": {}
      }
    },
    "/auth/api/v1/login": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/logout": {
      "get": {
        "responses": {}
      }
    },
    "/auth/api/v1/otp/validate": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.ValidateOTPResponse"
            }
          }
        }
      }
    },
    "/auth/api/v1/otps/generate": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/otps/generate/sign": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/otps/generate/status-update": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/profile": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.UserResponse"
            }
          }
        }
      }
    },
    "/auth/api/v1/re-login": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/roles": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "name": "platform_reference_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "admin",
                "other",
                "lender",
                "relationship_manager",
                "agent"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "platforms",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "statuses",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicRoleResponse"
              }
            }
          }
        }
      },
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/roles/permissions": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.PermissionResponse"
              }
            }
          }
        }
      },
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/roles/permissions/access-control": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/roles/permissions/status": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/roles/permissions/{id}": {
      "patch": {
        "responses": {}
      }
    },
    "/auth/api/v1/roles/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.RoleResponse"
            }
          }
        }
      },
      "put": {
        "responses": {}
      }
    },
    "/auth/api/v1/user": {
      "put": {
        "responses": {}
      },
      "post": {
        "responses": {}
      },
      "delete": {
        "responses": {}
      }
    },
    "/auth/api/v1/user/admins": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v1/user/by-role-id/{role_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicAdminResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/user/by-role/{role_id}": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.AdminResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/user/check-permission": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "resource",
            "in": "query"
          },
          {
            "type": "string",
            "name": "user_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/user/credit-analysts": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicAdminResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/user/field-officers": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicAdminResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/user/id/{user_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.UserDetailResponse"
            }
          }
        }
      }
    },
    "/auth/api/v1/user/kyc-event-id": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.UserWithKycEventIDResponse"
            }
          }
        }
      }
    },
    "/auth/api/v1/user/relationship-managers": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.RelationshipManagerResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/user/{role}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicAdminResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/users": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.UserDetailResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v1/users/id/{user_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.UserDetailResponse"
            }
          }
        }
      }
    },
    "/auth/api/v2/forgot-password": {
      "patch": {
        "responses": {}
      }
    },
    "/auth/api/v2/login": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v2/logout": {
      "get": {
        "responses": {}
      }
    },
    "/auth/api/v2/otps/generate": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v2/otps/generate/back-office": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v2/profile": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.UserResponse"
            }
          }
        }
      }
    },
    "/auth/api/v2/re-login": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v2/roles": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v2/roles/{id}": {
      "put": {
        "responses": {}
      },
      "delete": {
        "responses": {}
      }
    },
    "/auth/api/v2/user/by-role": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.UserDetailResponse"
              }
            }
          }
        }
      }
    },
    "/auth/api/v2/user/id/{user_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.UserDetailResponse"
            }
          }
        }
      }
    },
    "/auth/api/v3/login": {
      "post": {
        "responses": {}
      }
    },
    "/auth/api/v3/login/back-office": {
      "post": {
        "responses": {}
      }
    },
    "/c/api/v1/agents": {
      "get": {
        "description": "Get list of sales agents",
        "tags": [
          "agents"
        ],
        "summary": "List agents",
        "parameters": [
          {
            "type": "integer",
            "description": "Page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.PaginatorResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.AgentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Create a new sales agent",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "agents"
        ],
        "summary": "Create new agent",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.BasicAgentResponseWithCompanyName"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/agents/district-id/{district_id}": {
      "get": {
        "description": "Check if agents exist in a specific district",
        "tags": [
          "agents"
        ],
        "summary": "Check agent territory by district ID",
        "parameters": [
          {
            "type": "string",
            "description": "District ID",
            "name": "district_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.GenericAgentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/agents/referral-code": {
      "post": {
        "description": "Create a new referral code for agent",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "agents"
        ],
        "summary": "Create referral code",
        "parameters": [
          {
            "description": "Referral Code data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateReferralCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "patch": {
        "description": "Update referral code for agent",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "agents"
        ],
        "summary": "Update referral code",
        "parameters": [
          {
            "description": "Referral Code data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateReferralCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/agents/referral-code/migration": {
      "post": {
        "description": "Migrate referral codes",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "agents"
        ],
        "summary": "Referral code migration",
        "parameters": [
          {
            "description": "Referral Code Migration data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.ReferralCodeMigration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/agents/referral-code/{referral_code}": {
      "get": {
        "description": "Get agent by referral code",
        "tags": [
          "agents"
        ],
        "summary": "Check referral code owner",
        "parameters": [
          {
            "type": "string",
            "description": "Referral Code",
            "name": "referral_code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.GenericAgentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/agents/referral-code/{referral_code}/is-available": {
      "get": {
        "description": "Check if referral code is available",
        "tags": [
          "agents"
        ],
        "summary": "Check referral code availability",
        "parameters": [
          {
            "type": "string",
            "description": "Referral Code",
            "name": "referral_code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/agents/referral-code/{referral_code}/is-exist": {
      "get": {
        "description": "Check if referral code exists (public)",
        "tags": [
          "agents"
        ],
        "summary": "Check referral code existence",
        "parameters": [
          {
            "type": "string",
            "description": "Referral Code",
            "name": "referral_code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/agents/{id}": {
      "get": {
        "description": "Find agent by UUID",
        "tags": [
          "agents"
        ],
        "summary": "Get agent by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Agent ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.AgentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "put": {
        "description": "Update agent by ID",
        "tags": [
          "agents"
        ],
        "summary": "Update agent",
        "parameters": [
          {
            "type": "string",
            "description": "Agent ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.BasicAgentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/business-sectors": {
      "get": {
        "description": "Get all business sectors",
        "tags": [
          "business-sectors"
        ],
        "summary": "List all business sectors",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.BusinessSectorResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/cities/reach_availability": {
      "patch": {
        "description": "Update reach availability for cities",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "locations"
        ],
        "summary": "Update cities reach availability",
        "parameters": [
          {
            "description": "Cities data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateCityReachAvailabilityParam"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/cities/{cityID}/districts": {
      "get": {
        "description": "Get all districts in a city",
        "tags": [
          "locations"
        ],
        "summary": "Get all districts by city ID",
        "parameters": [
          {
            "type": "string",
            "description": "City ID",
            "name": "cityID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/city/by_name": {
      "get": {
        "description": "Get city by name",
        "tags": [
          "locations"
        ],
        "summary": "Get city by name",
        "parameters": [
          {
            "type": "string",
            "description": "City Name",
            "name": "city_name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/company-agents": {
      "get": {
        "description": "Get list of company agents",
        "tags": [
          "company-agents"
        ],
        "summary": "List company agents",
        "parameters": [
          {
            "type": "integer",
            "description": "Page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Limit",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.PaginatorResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.CompanyAgentRepsonse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Create a new company agent",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "company-agents"
        ],
        "summary": "Create company agent",
        "parameters": [
          {
            "description": "Company Agent data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateCompanyAgent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.BasicCompanyAgentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/company-agents/territories/{id}": {
      "get": {
        "description": "Get territories for a company agent",
        "tags": [
          "company-agents"
        ],
        "summary": "Get company agent territories",
        "parameters": [
          {
            "type": "string",
            "description": "Company Agent ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.CityResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/company-agents/{id}": {
      "get": {
        "description": "Find company agent by UUID",
        "tags": [
          "company-agents"
        ],
        "summary": "Get company agent by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Company Agent ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.CompanyAgentRepsonse"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "put": {
        "description": "Update company agent by ID",
        "tags": [
          "company-agents"
        ],
        "summary": "Update company agent",
        "parameters": [
          {
            "type": "string",
            "description": "Company Agent ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Company Agent data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateCompanyAgent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.BasicCompanyAgentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/by-email": {
      "get": {
        "description": "Find customer by email",
        "tags": [
          "customers"
        ],
        "summary": "Find customer by email",
        "parameters": [
          {
            "type": "string",
            "description": "Email",
            "name": "email",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/by-phone-number": {
      "get": {
        "description": "Find customer by phone number",
        "tags": [
          "customers"
        ],
        "summary": "Find customer by phone number",
        "parameters": [
          {
            "type": "string",
            "description": "Phone Number",
            "name": "phone_number",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/extended": {
      "post": {
        "description": "Create extended customer data",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "customers"
        ],
        "summary": "Create customer extended",
        "parameters": [
          {
            "description": "Extended data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.AddOrEditCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/list/by-phone-number": {
      "get": {
        "description": "Find customers by phone number",
        "tags": [
          "customers"
        ],
        "summary": "Find customers by phone number",
        "parameters": [
          {
            "type": "string",
            "description": "Phone Number",
            "name": "phone_number",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/list/distinct/by-phone-numbers": {
      "get": {
        "description": "Find distinct customers by multiple phone numbers",
        "tags": [
          "customers"
        ],
        "summary": "Find distinct customers by phone numbers",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Phone Numbers",
            "name": "phone_numbers",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/search": {
      "get": {
        "description": "Get all customers by search query",
        "tags": [
          "customers"
        ],
        "summary": "Get all customers by search",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/sub-customer": {
      "post": {
        "description": "Upsert sub customer data",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "customers"
        ],
        "summary": "Upsert sub customer data",
        "parameters": [
          {
            "description": "Sub customer data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpsertCustomerDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/with-property": {
      "post": {
        "description": "Create customer and property data",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "customers"
        ],
        "summary": "Create customer with property",
        "parameters": [
          {
            "description": "Customer and property data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateCustomerWithPropertyParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}": {
      "get": {
        "description": "Find customer by ID",
        "tags": [
          "customers"
        ],
        "summary": "Find customer by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "put": {
        "description": "Update customer by ID",
        "tags": [
          "customers"
        ],
        "summary": "Update customer",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/account-mutation-password": {
      "put": {
        "description": "Update account mutation password for a customer",
        "tags": [
          "customers"
        ],
        "summary": "Update customer account mutation password",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Password data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateCustomerAccountMutationPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/address/with-related-address": {
      "post": {
        "description": "Create customer and related address (deprecated)",
        "tags": [
          "customers"
        ],
        "summary": "Create customer and related address (deprecated)",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Customer and address data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateCustomerAndRelatedAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/details": {
      "put": {
        "description": "Update detail for a customer",
        "tags": [
          "customers"
        ],
        "summary": "Update customer detail",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Customer detail",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateCustomerDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/emergency-contact": {
      "put": {
        "description": "Update emergency contact for a customer",
        "tags": [
          "customers"
        ],
        "summary": "Update customer emergency contact",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Emergency contact",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateCustomerEmergencyContactParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "post": {
        "description": "Create emergency contact for a customer",
        "tags": [
          "customers"
        ],
        "summary": "Create customer emergency contact",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Emergency contact",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateCustomerEmergencyContactParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/emergency-contact-from-partner": {
      "post": {
        "description": "Create emergency contact from partner",
        "tags": [
          "customers"
        ],
        "summary": "Create customer emergency contact from partner",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Emergency contact",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateCustomerEmergencyContactParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/emergency-contacts": {
      "get": {
        "description": "Get emergency contacts by customer ID",
        "tags": [
          "customers"
        ],
        "summary": "Get customer emergency contacts",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.CustomerEmergencyContactResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/extended": {
      "put": {
        "description": "Update extended customer data",
        "tags": [
          "customers"
        ],
        "summary": "Update customer extended",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Extended data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.AddOrEditCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/name-and-government-id": {
      "put": {
        "description": "Update customer name and government ID by customer ID",
        "tags": [
          "customers"
        ],
        "summary": "Update customer name and government ID by customer ID",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Name and government ID",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateCustomerNameAndGovernmentId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/occupations": {
      "post": {
        "description": "Upsert (insert/update) customer occupation",
        "tags": [
          "occupation"
        ],
        "summary": "Upsert customer occupation",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Occupation data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpsertCustomerOccupationParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/occupations/{occupationID}": {
      "put": {
        "description": "Update occupation by ID",
        "tags": [
          "occupation"
        ],
        "summary": "Update occupation",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Occupation ID",
            "name": "occupationID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/occupations/{occupationID}/detail": {
      "put": {
        "description": "Update occupation detail by ID",
        "tags": [
          "occupation"
        ],
        "summary": "Update occupation detail",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Occupation ID",
            "name": "occupationID",
            "in": "path",
            "required": true
          },
          {
            "description": "Occupation detail data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateOccupationDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/ocr/process-family-card": {
      "post": {
        "description": "Process OCR for family card",
        "tags": [
          "customers"
        ],
        "summary": "Process family card OCR",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "OCR data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.ProcessFamilyCardOCRRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/ocr/process-identity-card": {
      "post": {
        "description": "Process OCR for identity card",
        "tags": [
          "customers"
        ],
        "summary": "Process identity card OCR",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "OCR data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.ProcessIdentityCardOCRRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/offer-data": {
      "get": {
        "description": "Get offer document data",
        "tags": [
          "customers"
        ],
        "summary": "Get offer document data",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/domains.OfferDocumentData"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/personal-data": {
      "get": {
        "description": "Get personal data by customer ID",
        "tags": [
          "customers"
        ],
        "summary": "Get customer personal data",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "put": {
        "description": "Update personal data for a customer",
        "tags": [
          "customers"
        ],
        "summary": "Update customer personal data",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Personal data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdatePersonalData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/selfie": {
      "patch": {
        "description": "Update selfie image for a customer",
        "tags": [
          "customers"
        ],
        "summary": "Update customer selfie image",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Selfie image",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.SelfieImageData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.DocumentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/spouse": {
      "post": {
        "description": "Upsert spouse customer data",
        "tags": [
          "customers"
        ],
        "summary": "Upsert spouse customer",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Spouse data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.AddSpouseCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/sub-customer": {
      "get": {
        "description": "Get sub customer data",
        "tags": [
          "customers"
        ],
        "summary": "Get sub customer data",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/update-manual": {
      "put": {
        "description": "Update customer manually",
        "tags": [
          "customers"
        ],
        "summary": "Update customer manually",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Manual update",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateCustomerManual"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/customers/{customerID}/with-property": {
      "patch": {
        "description": "Update customer and property data",
        "tags": [
          "customers"
        ],
        "summary": "Update customer with property",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Customer and property data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateCustomerWithPropertyParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/districts/{districtID}/villages": {
      "get": {
        "description": "Get all villages in a district",
        "tags": [
          "locations"
        ],
        "summary": "Get all villages by district ID",
        "parameters": [
          {
            "type": "string",
            "description": "District ID",
            "name": "districtID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/documents": {
      "post": {
        "description": "Create a new document",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "documents"
        ],
        "summary": "Create document",
        "parameters": [
          {
            "description": "Document data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.DocumentResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/documents/all/{id}": {
      "get": {
        "description": "Get all documents by customer ID",
        "tags": [
          "documents"
        ],
        "summary": "Get all customer documents",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/documents/delete/by-reference-and-document-types": {
      "delete": {
        "description": "Delete documents by customer and document types",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "documents"
        ],
        "summary": "Delete documents by customer and document types",
        "parameters": [
          {
            "description": "Delete params",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.DeleteDocumentsByCustomerAndDocumentTypesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/documents/personal-data/{id}": {
      "get": {
        "description": "Get personal data documents by customer ID",
        "tags": [
          "documents"
        ],
        "summary": "Get customer personal data documents",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/documents/{id}": {
      "delete": {
        "description": "Delete a document by its ID",
        "tags": [
          "documents"
        ],
        "summary": "Delete document by ID",
        "parameters": [
          {
            "type": "string",
            "description": "Document ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/master-data": {
      "get": {
        "description": "Get all master data",
        "tags": [
          "master-data"
        ],
        "summary": "Get all master data",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.MasterDataResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/master-data/code/{code}": {
      "get": {
        "description": "Get master data by code",
        "tags": [
          "master-data"
        ],
        "summary": "Get master data by code",
        "parameters": [
          {
            "type": "string",
            "description": "Master Data Code",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.MasterDataResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/occupation-types": {
      "get": {
        "description": "Get all occupation types",
        "tags": [
          "occupation-types"
        ],
        "summary": "Get all occupation types",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.OccupationTypeResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/occupation-types/code/{code}": {
      "get": {
        "description": "Get occupation type by code",
        "tags": [
          "occupation-types"
        ],
        "summary": "Get occupation type by code",
        "parameters": [
          {
            "type": "string",
            "description": "Occupation Type Code",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.OccupationTypeResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/occupation/customer/{customer-id}/documents": {
      "get": {
        "description": "Get all documents for a customer",
        "tags": [
          "occupation"
        ],
        "summary": "Get customer documents by customer ID",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customer-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.DocumentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/properties/valuation-prediction": {
      "get": {
        "description": "Predict property valuation",
        "tags": [
          "properties"
        ],
        "summary": "Property valuation prediction",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/properties/{customerID}": {
      "post": {
        "description": "Store a new property for a customer",
        "tags": [
          "properties"
        ],
        "summary": "Store property",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Property data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.AddNewProperty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.PropertyResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/properties/{customerID}/details": {
      "get": {
        "description": "Get property details by customer ID",
        "tags": [
          "properties"
        ],
        "summary": "Get property details",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/properties/{customerID}/documents": {
      "get": {
        "description": "Get property documents by customer ID",
        "tags": [
          "properties"
        ],
        "summary": "Get property documents",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/properties/{customerID}/upsert": {
      "post": {
        "description": "Upsert (insert/update) customer property",
        "tags": [
          "properties"
        ],
        "summary": "Upsert customer property",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Property data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpsertCustomerPropertyParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/properties/{customerID}/{propertyID}": {
      "get": {
        "description": "Get property by customer and property ID",
        "tags": [
          "properties"
        ],
        "summary": "Get property",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Property ID",
            "name": "propertyID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      },
      "put": {
        "description": "Update property details for a customer",
        "tags": [
          "properties"
        ],
        "summary": "Update property details",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Property ID",
            "name": "propertyID",
            "in": "path",
            "required": true
          },
          {
            "description": "Property detail data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdatePropertyDetail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/property-certificate-types": {
      "get": {
        "description": "Get all property certificate types",
        "tags": [
          "property-certificate-types"
        ],
        "summary": "Get all property certificate types",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.PropertyCertificateTypeResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/property-certificate-types/code/{code}": {
      "get": {
        "description": "Get property certificate type by code",
        "tags": [
          "property-certificate-types"
        ],
        "summary": "Get property certificate type by code",
        "parameters": [
          {
            "type": "string",
            "description": "Property Certificate Type Code",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.PropertyCertificateTypeResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/property-types": {
      "get": {
        "description": "Get all property types",
        "tags": [
          "property-types"
        ],
        "summary": "Get all property types",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.BasicPropertyTypeResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/property-types/code/{code}": {
      "get": {
        "description": "Get property type by code",
        "tags": [
          "property-types"
        ],
        "summary": "Get property type by code",
        "parameters": [
          {
            "type": "string",
            "description": "Property Type Code",
            "name": "code",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.BasicPropertyTypeResponse"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/provinces": {
      "get": {
        "description": "Get all provinces",
        "tags": [
          "locations"
        ],
        "summary": "Get all provinces",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.ProvinceResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/provinces/{provinceID}/cities": {
      "get": {
        "description": "Get all cities in a province",
        "tags": [
          "locations"
        ],
        "summary": "Get all cities by province ID",
        "parameters": [
          {
            "type": "string",
            "description": "Province ID",
            "name": "provinceID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.CityResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/public/agents": {
      "post": {
        "description": "Create a new agent using an auth key",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "agents"
        ],
        "summary": "Create agent with auth key (public)",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/definitions/presenters.BasicAgentResponseWithCompanyName"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v1/public/agents/company": {
      "get": {
        "description": "Get list of public company agents",
        "tags": [
          "company-agents"
        ],
        "summary": "Get public company agents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/presenters.PublicCompanyAgentResponse"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v2/customers/{customerID}": {
      "put": {
        "description": "Update customer by ID (v2)",
        "tags": [
          "customers"
        ],
        "summary": "Update customer v2",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Customer data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateCustomer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v2/customers/{customerID}/gov-data": {
      "put": {
        "description": "Update government data for a customer",
        "tags": [
          "customers"
        ],
        "summary": "Update customer government data",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "description": "Government data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.EditCustomerGovernmentBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v2/customers/{customerID}/occupations/{occupationID}": {
      "put": {
        "description": "Update occupation by ID (v2)",
        "tags": [
          "occupation"
        ],
        "summary": "Update occupation v2",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Occupation ID",
            "name": "occupationID",
            "in": "path",
            "required": true
          },
          {
            "description": "Occupation data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateOccupationV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v2/customers/{customerID}/properties/{propertyID}": {
      "put": {
        "description": "Update property (v2)",
        "tags": [
          "properties"
        ],
        "summary": "Update property v2",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customerID",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Property ID",
            "name": "propertyID",
            "in": "path",
            "required": true
          },
          {
            "description": "Property data",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdatePropertyV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v3/occupation/customer/income": {
      "put": {
        "description": "Upsert (insert/update) customer income",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "occupation"
        ],
        "summary": "Upsert customer income",
        "parameters": [
          {
            "description": "Customer Occupations",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/requests.CustomerOccupationsParams"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/c/api/v3/occupation/customer/{customer-id}/income": {
      "get": {
        "description": "Get all occupations/income for a customer",
        "tags": [
          "occupation"
        ],
        "summary": "Get customer income by customer ID",
        "parameters": [
          {
            "type": "string",
            "description": "Customer ID",
            "name": "customer-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/response.StandardResponse"
                },
                {
                  "type": "object",
                  "properties": {
                    "data": {}
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/l/api/v1/agreements/closing": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "heloc_id",
            "in": "query"
          },
          {
            "enum": [
              "origination",
              "referral"
            ],
            "type": "string",
            "name": "lender_type",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.AgreementLoanServicing"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/agreements/heloc_id/{heloc_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.AgreementResponse"
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpsertAgreement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.AgreementResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/agreements/heloc_id/{heloc_id}/confirm": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.AgreementResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/agreements/minimum-payment-calculation-type": {
      "get": {
        "responses": {}
      }
    },
    "/l/api/v1/agreements/servicing": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "type": "string",
            "name": "heloc_id",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "lender_ids",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.AgreementLoanServicing"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/documents": {
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.DocumentResponse"
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "name": "document_type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "entity_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "entity_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/documents/approved-ol/{offer_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.DocURLRepsonse"
            }
          }
        }
      }
    },
    "/l/api/v1/documents/lender-borrow-pk-signed/{loan-id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.DocumentWithPresignedUrlResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/documents/lender-pk-signed/{loan-id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.DocumentWithPresignedUrlResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/documents/lender/preload": {
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.PreloadLenderDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/integrations.Field"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/documents/lender/{offer_id}": {
      "get": {
        "responses": {}
      }
    },
    "/l/api/v1/documents/loan-proposal/{offer_id}": {
      "get": {
        "parameters": [
          {
            "type": "boolean",
            "name": "is_regenerate",
            "in": "query"
          },
          {
            "type": "string",
            "name": "offerID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.DocumentLoanProposalResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/documents/{id}": {
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/lender-preferences": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/domains.LenderPreferenceRule"
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateLenderPreferenceRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/domains.LenderPreferenceRule"
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateLenderPreferenceRuleRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/domains.LenderPreferenceRule"
            }
          }
        }
      }
    },
    "/l/api/v1/lender-preferences/force": {
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/domains.MatchmakingResult"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/lender-preferences/{heloc_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/domains.MatchmakingResult"
            }
          }
        }
      }
    },
    "/l/api/v1/lenders": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicLenderResponse"
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.AddNewLender"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.LenderResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/lenders/combine-proposals/{heloc_id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/lenders/statuses": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/domains.LenderStatus"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/lenders/statuses/{id}": {
      "patch": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateLenderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/lenders/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.LenderResponse"
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateLender"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.LenderResponse"
            }
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/lenders/{id}/addons": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/domains.GetLenderAddons"
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateLenderAddons"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/lenders/{id}/lender-interest": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/domains.LenderInterest"
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.LenderInterestRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/domains.LenderInterest"
            }
          }
        }
      }
    },
    "/l/api/v1/locations/cities/{cityID}/districts": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.DistrictResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/locations/districts/{districtID}/villages": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.VillageResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/locations/provinces": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.ProvinceResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/locations/provinces/{provinceID}/cities": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.CityResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/master-lender-interest-rates": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/domains.MasterLenderInterestRate"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/members": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "name",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicMemberResponse"
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.AddNewMember"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/presenters.BasicMemberResponse"
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.DeleteMember"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/members/me": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.MemberResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/members/{id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.MemberResponse"
            }
          }
        }
      },
      "put": {
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateMember"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.BasicMemberResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/members/{id}/disactive": {
      "put": {
        "parameters": [
          {
            "type": "string",
            "description": "Member ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "approved_end_date",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "approved_start_date",
            "in": "query"
          },
          {
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "end_date",
            "in": "query"
          },
          {
            "type": "string",
            "name": "heloc_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "lenderID",
            "in": "query"
          },
          {
            "type": "string",
            "name": "lender_name",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "name": "product",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "status_ids",
            "in": "query"
          }
        ],
        "responses": {}
      },
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.AssignApplication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicOfferResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/applications": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "approved_end_date",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "approved_start_date",
            "in": "query"
          },
          {
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "end_date",
            "in": "query"
          },
          {
            "type": "string",
            "name": "heloc_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "lender_id",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "status_ids",
            "in": "query"
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/confirm": {
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.ConfirmOfferRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/disbursement/{loan-id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Loan ID",
            "name": "loan-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/finalized/{loan-id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Loan ID",
            "name": "loan-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/heloc-id/{heloc_id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "HELOC ID",
            "name": "heloc_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "with_match_rate",
            "in": "query"
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/heloc-id/{heloc_id}/approved": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "HELOC ID",
            "name": "heloc_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.BasicOfferResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/offers/insurance": {
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.SubmitOfferInsurance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/insurance-providers/{type_id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Insurance Type ID",
            "name": "type_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/insurance-types": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.InsuranceTypeResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/originations": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "number",
            "name": "interest_max",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "number",
            "name": "interest_min",
            "in": "query"
          },
          {
            "type": "string",
            "name": "lenderID",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "name": "loan_id",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "loan_tenor_max",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "loan_tenor_min",
            "in": "query"
          },
          {
            "type": "string",
            "name": "locations",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "number",
            "name": "plafon_max",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "number",
            "name": "plafon_min",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.OriginationResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/sign": {
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.SignDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": true
            }
          }
        }
      }
    },
    "/l/api/v1/offers/signed/{loan-id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Loan ID",
            "name": "loan-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/statuses": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicOfferStatusResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/syndication/statuses": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.SyndicationDetailStatusResponse"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/syndication/{syndication_id}": {
      "patch": {
        "parameters": [
          {
            "type": "string",
            "description": "Syndication ID",
            "name": "syndication_id",
            "in": "path",
            "required": true
          },
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateSyndicationStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/{id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Offer ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/{id}/lender-sign-credit-agreement/template": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Offer ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/{id}/logs": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Offer ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.OfferStatusLog"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/{id}/platform-sign-credit-agreement/template": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Offer ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/l/api/v1/offers/{id}/signed": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Offer ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/{lender-id}/{loan-id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "Lender ID",
            "name": "lender-id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Loan ID",
            "name": "loan-id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {}
      }
    },
    "/l/api/v1/offers/{offer_id}/status": {
      "patch": {
        "parameters": [
          {
            "type": "string",
            "description": "Offer ID",
            "name": "offer_id",
            "in": "path",
            "required": true
          },
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateOfferStatusByIDBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.BasicOfferResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/products": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "product_ids",
            "in": "query"
          },
          {
            "type": "string",
            "name": "repayment_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.BasicProductResponse"
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/presenters.BasicProductResponse"
            }
          }
        }
      }
    },
    "/l/api/v1/products/{id}": {
      "put": {
        "parameters": [
          {
            "type": "string",
            "description": "Product ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.UpdateProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/presenters.BasicProductResponse"
            }
          }
        }
      }
    },
    "/l/api/v2/offers": {
      "get": {
        "parameters": [
          {
            "minimum": 0,
            "type": "integer",
            "name": "approved_end_date",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "approved_start_date",
            "in": "query"
          },
          {
            "type": "string",
            "name": "customer_name",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "end_date",
            "in": "query"
          },
          {
            "type": "string",
            "name": "heloc_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "lender_id",
            "in": "query"
          },
          {
            "type": "string",
            "name": "lender_name",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "limit",
            "in": "query"
          },
          {
            "minimum": 1,
            "type": "integer",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "name": "product",
            "in": "query"
          },
          {
            "minimum": 0,
            "type": "integer",
            "name": "start_date",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "status_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/presenters.OfferV2Response"
              }
            }
          }
        }
      },
      "post": {
        "parameters": [
          {
            "description": "body params",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.CreateOffer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/presenters.BasicOfferResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "dto.AdditionalDocumentMasterDataResponse": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "slug_name": {
          "type": "string"
        }
      }
    },
    "dto.ApplicationAppraisalResponse": {
      "type": "object",
      "properties": {
        "appraisal_date": {
          "type": "string"
        },
        "appraisal_documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.BasicDocumentResponse"
          }
        },
        "verified_property_value": {
          "type": "number"
        },
        "verified_property_value_upper_limit": {
          "type": "number"
        }
      }
    },
    "dto.BankResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "dto.BasicDocumentResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "presign_url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "dto.BasicLoanApplicationInsurancePolicyResponse": {
      "type": "object",
      "properties": {
        "agreement_date": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.BasicDocumentResponse"
          }
        },
        "insurance_partner": {
          "type": "string"
        },
        "insurance_product": {
          "type": "string"
        },
        "policy_amount": {
          "type": "number"
        },
        "policy_issue_date": {
          "type": "string"
        },
        "policy_number": {
          "type": "string"
        }
      }
    },
    "dto.BasicLoanApplicationResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "global_trx_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "occupation_id": {
          "type": "string"
        },
        "property_id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "dto.BorrowerCreditAggrementDocumentResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_borrower_signed": {
          "type": "boolean"
        },
        "presign_url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "dto.CreditScoreResponse": {
      "type": "object",
      "properties": {
        "confidence_rate": {
          "type": "integer"
        },
        "grade": {
          "type": "string"
        }
      }
    },
    "dto.DBRCalculation": {
      "type": "object",
      "properties": {
        "annual_interest_rate": {
          "type": "number"
        },
        "credit_limit": {
          "type": "number"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.BasicDocumentResponse"
          }
        },
        "id": {
          "type": "string"
        },
        "income": {
          "type": "number"
        },
        "int_dbr": {
          "type": "number"
        },
        "loan_application_id": {
          "type": "string"
        },
        "marital_status": {
          "type": "string"
        },
        "pmt": {
          "type": "number"
        },
        "pmt_dbr": {
          "type": "number"
        },
        "spouse_income": {
          "type": "number"
        },
        "tenure": {
          "type": "integer"
        }
      }
    },
    "dto.DocumentSignCreditAgreementLender": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nib_number": {
          "type": "string"
        }
      }
    },
    "dto.DocumentSignCreditAgreementLoanApplication": {
      "type": "object",
      "properties": {
        "lender_rate_fee": {
          "type": "number"
        },
        "loan_amount": {
          "type": "number"
        },
        "platform_rate_fee": {
          "type": "number"
        },
        "tenure": {
          "type": "integer"
        }
      }
    },
    "dto.DocumentSignCreditAgreementTemplateResponse": {
      "type": "object",
      "properties": {
        "agreement_number": {
          "type": "string"
        },
        "lender": {
          "$ref": "#/definitions/dto.DocumentSignCreditAgreementLender"
        },
        "loan_application": {
          "$ref": "#/definitions/dto.DocumentSignCreditAgreementLoanApplication"
        }
      }
    },
    "dto.LoanApplicationActivityCheckResponse": {
      "type": "object",
      "properties": {
        "agreement_participation": {
          "type": "boolean"
        },
        "certificate_check": {
          "type": "boolean"
        },
        "credit_analytic": {
          "type": "boolean"
        },
        "debt_consolidation": {
          "type": "boolean"
        },
        "funding_creation": {
          "type": "boolean"
        },
        "income_analytic": {
          "type": "boolean"
        },
        "insurance_policy": {
          "type": "boolean"
        },
        "property_valuation": {
          "type": "boolean"
        },
        "survey_result": {
          "type": "boolean"
        }
      }
    },
    "dto.LoanApplicationCertificationCheckResponse": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.BasicDocumentResponse"
          }
        },
        "submission_date": {
          "type": "string"
        }
      }
    },
    "dto.LoanApplicationCreditAnalystActivityResponse": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.BasicDocumentResponse"
          }
        },
        "user_credit_limit": {
          "type": "number"
        }
      }
    },
    "dto.LoanApplicationDbrLtvResponse": {
      "type": "object",
      "properties": {
        "dbr": {
          "type": "number"
        },
        "global_trx_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "ltv": {
          "type": "number"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "dto.LoanApplicationReasonCategorizedResponse": {
      "type": "object",
      "properties": {
        "category_display_name": {
          "type": "string"
        },
        "category_slug": {
          "type": "string"
        },
        "child_reasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.LoanApplicationReasonResponse"
          }
        }
      }
    },
    "dto.LoanApplicationReasonResponse": {
      "type": "object",
      "properties": {
        "blocking_period_in_days": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "detail_reason": {
          "description": "Optional field for detail reason",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "status_id": {
          "type": "string"
        }
      }
    },
    "dto.LoanApplicationRequiredAdditionalDocAggregateResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "data_group": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "docs_master_data_id": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dto.BasicDocumentResponse"
          }
        },
        "id": {
          "type": "string"
        },
        "loan_id": {
          "type": "string"
        },
        "slug_name": {
          "type": "string"
        },
        "submitted_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "dto.LoanApplicationStatusResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sequence": {
          "type": "integer"
        },
        "user_description": {
          "type": "string"
        },
        "user_display_name": {
          "type": "string"
        }
      }
    },
    "dto.LoanApplicationSummaryResponse": {
      "type": "object",
      "properties": {
        "collateral": {
          "type": "string"
        },
        "credit_score": {
          "$ref": "#/definitions/dto.CreditScoreResponse"
        },
        "dbr": {
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "interest": {
          "type": "number"
        },
        "loan_limit": {
          "type": "number"
        },
        "ltv": {
          "type": "number"
        },
        "tenure": {
          "type": "integer"
        }
      }
    },
    "dto.LoanPurposeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "dto.MatrixResponse": {
      "type": "object",
      "properties": {
        "pass": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "dto.PaymentValidationResponse": {
      "type": "object",
      "properties": {
        "bank_account_number": {
          "type": "string"
        },
        "bank_code": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_found": {
          "type": "boolean"
        },
        "reference_id": {
          "type": "string"
        },
        "reference_type": {
          "type": "string"
        },
        "response": {},
        "status": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "dto.RevisionMasterDataResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "loan_status_id": {
          "type": "string"
        },
        "revision_type": {
          "type": "string"
        },
        "user_display_name": {
          "type": "string"
        }
      }
    },
    "dto.ScreeningEstimateOfferMatrixResponse": {
      "type": "object",
      "properties": {
        "estimated_loan_by_dbr": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "estimated_loan_by_dbr_income": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "estimated_loan_by_dbr_payment_bandwidth": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "estimated_loan_by_ltv": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "estimated_loan_by_recommendation": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "max_offer": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "max_offer_with_collateral": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "mixed_max_offer": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "mixed_max_offer_with_collateral": {
          "$ref": "#/definitions/dto.MatrixResponse"
        },
        "recommended_loan_upper_limit_after_survey": {
          "$ref": "#/definitions/dto.MatrixResponse"
        }
      }
    },
    "dto.SigningSurveyScheduleResponse": {
      "type": "object",
      "properties": {
        "confirmed_schedule": {
          "$ref": "#/definitions/entity.SigningSurveySchedule"
        },
        "proposed_schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.SurveySchedule"
          }
        }
      }
    },
    "dto.SurveyAggregateResponse": {
      "type": "object",
      "properties": {
        "customer": {
          "$ref": "#/definitions/dto.SurveyCustomer"
        },
        "global_trx_id": {
          "type": "string"
        },
        "loan_application_id": {
          "type": "string"
        },
        "survey_documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.DocumentResponse"
          }
        },
        "survey_result": {
          "description": "PIJ-1472 Add survey result to the response",
          "allOf": [
            {
              "$ref": "#/definitions/dto.SurveyResultDto"
            }
          ]
        }
      }
    },
    "dto.SurveyCustomer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "occupation": {
          "$ref": "#/definitions/dto.SurveyCustomerOccupation"
        },
        "property": {
          "$ref": "#/definitions/dto.SurveyCustomerProperty"
        }
      }
    },
    "dto.SurveyCustomerOccupation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "income": {
          "type": "number"
        },
        "occupation_type": {
          "$ref": "#/definitions/entity.OccupationType"
        }
      }
    },
    "dto.SurveyCustomerProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "dto.SurveyResultDto": {
      "type": "object",
      "properties": {
        "debtor_income_after_survey": {
          "type": "number"
        },
        "debtor_spouse_income_after_survey": {
          "type": "number"
        }
      }
    },
    "dto.SurveySchedule": {
      "type": "object",
      "properties": {
        "confirmed_schedule": {
          "$ref": "#/definitions/entity.SurveySchedule"
        },
        "description": {
          "type": "string"
        },
        "proposed_schedule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.SurveySchedule"
          }
        },
        "verification_status": {
          "type": "string"
        }
      }
    },
    "entity.AdjustTrackingInfo": {
      "type": "object",
      "properties": {
        "adid": {
          "type": "string"
        },
        "app_token": {
          "type": "string"
        },
        "gps_adid": {
          "type": "string"
        },
        "idfa": {
          "type": "string"
        },
        "ip_address": {
          "type": "string"
        }
      }
    },
    "entity.CRMObject": {
      "type": "object",
      "properties": {
        "contact_id": {
          "type": "string"
        },
        "opportunity_id": {
          "type": "string"
        },
        "property_asset_id": {
          "type": "string"
        }
      }
    },
    "entity.CRMTrackingInfo": {
      "type": "object",
      "properties": {
        "espo_crm": {
          "$ref": "#/definitions/entity.CRMObject"
        },
        "freshsales": {
          "$ref": "#/definitions/entity.CRMObject"
        },
        "last_updated": {
          "type": "string"
        }
      }
    },
    "entity.ConsentType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "entity.CreateCustomerOccupationParams": {
      "type": "object",
      "properties": {
        "business_address": {
          "type": "string"
        },
        "business_category": {
          "type": "string"
        },
        "company_name": {
          "type": "string"
        },
        "employment_contract_category": {
          "type": "string"
        },
        "employment_document_type": {
          "type": "string"
        },
        "employment_document_type_detail": {
          "type": "string"
        },
        "employment_length_category": {
          "type": "string"
        },
        "estimated_revenue_type": {
          "type": "string"
        },
        "income": {
          "type": "number"
        },
        "occupation_type_id": {
          "type": "string"
        },
        "professional_field_type": {
          "type": "string"
        },
        "professional_status_type": {
          "type": "string"
        },
        "spouse_income": {
          "type": "number"
        }
      }
    },
    "entity.CreateCustomerPropertyParams": {
      "type": "object",
      "required": [
        "certificate_owner",
        "certificate_owner_presence",
        "certificate_type_id",
        "is_certificate_on_collateralized",
        "property_type_id",
        "surface_area"
      ],
      "properties": {
        "building_area": {
          "type": "number"
        },
        "certificate_owner": {
          "type": "string",
          "enum": [
            "myself",
            "partner",
            "parents",
            "siblings",
            "parents_in_law",
            "friend",
            "previous_owner",
            "extended_family",
            "others"
          ]
        },
        "certificate_owner_detail": {
          "type": "string"
        },
        "certificate_owner_presence": {
          "type": "string",
          "enum": [
            "present_and_agree",
            "not_present_and_deceased",
            "not_present_and_deceased_with_inheritance_letter",
            "not_present_and_agree",
            "not_present_and_not_agree"
          ]
        },
        "certificate_type_detail": {
          "type": "string"
        },
        "certificate_type_id": {
          "type": "string"
        },
        "estimated_price_amount": {
          "type": "number"
        },
        "is_certificate_on_collateralized": {
          "type": "string",
          "enum": [
            "yes_for_house_loan",
            "yes_for_others",
            "no"
          ]
        },
        "is_owner_present": {
          "type": "boolean"
        },
        "is_property_inhabited": {
          "type": "boolean"
        },
        "property_resident": {
          "type": "string"
        },
        "property_type_detail": {
          "type": "string"
        },
        "property_type_id": {
          "type": "string"
        },
        "surface_area": {
          "type": "number"
        }
      }
    },
    "entity.CustomerAddress": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "entity.CustomerEmergencyContact": {
      "type": "object",
      "properties": {
        "crm_tracking_info": {
          "$ref": "#/definitions/entity.CRMTrackingInfo"
        },
        "emergency_contact_relationship": {
          "$ref": "#/definitions/entity.CustomerEmergencyContactRelationship"
        },
        "id": {
          "type": "string"
        },
        "is_verified": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "relationship_id": {
          "description": "added this for PIJ-15 to support relationship_id as payload",
          "type": "string"
        }
      }
    },
    "entity.CustomerEmergencyContactRelationship": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "relation": {
          "type": "string"
        },
        "relation_display_name": {
          "type": "string"
        }
      }
    },
    "entity.DocumentResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "presign_url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "entity.FamilyCardAddress": {
      "type": "object",
      "properties": {
        "occupants": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "entity.FineractCharges": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number"
        },
        "chargeId": {
          "type": "integer"
        }
      }
    },
    "entity.FineractDatatableLoanExtraConfigurationRequest": {
      "type": "object",
      "properties": {
        "borrower_account_name": {
          "type": "string"
        },
        "borrower_account_number": {
          "type": "string"
        },
        "borrower_bank": {
          "type": "string"
        },
        "dc_account_name": {
          "type": "string"
        },
        "dc_account_number": {
          "type": "string"
        },
        "dc_bank_name": {
          "type": "string"
        },
        "fee_cost_of_fund_lender": {
          "type": "string"
        },
        "fee_for_pijar": {
          "type": "string"
        },
        "interest_cost_of_fund_lender": {
          "type": "string"
        },
        "interest_for_pijar": {
          "type": "string"
        },
        "lender_account_name": {
          "type": "string"
        },
        "lender_account_number": {
          "type": "string"
        },
        "lender_admin_fee_account_name": {
          "type": "string"
        },
        "lender_admin_fee_account_number": {
          "type": "string"
        },
        "lender_admin_fee_bank_name": {
          "type": "string"
        },
        "lender_bank_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "ops_account_name": {
          "type": "string"
        },
        "ops_account_number": {
          "type": "string"
        },
        "ops_bank_name": {
          "type": "string"
        },
        "penalty_cost_of_fund_lender": {
          "type": "string"
        },
        "penalty_for_pijar": {
          "type": "string"
        },
        "repayment_bank_name": {
          "type": "string"
        },
        "repayment_va_account_name": {
          "type": "string"
        },
        "repayment_va_account_number": {
          "type": "string"
        }
      }
    },
    "entity.FineractLoanDebtConsolidationRequest": {
      "type": "object",
      "properties": {
        "bank_account_name": {
          "type": "string"
        },
        "bank_account_number": {
          "type": "string"
        },
        "bank_name": {
          "type": "string"
        },
        "creditor_name": {
          "type": "string"
        },
        "debt_amount": {
          "type": "number"
        },
        "debtor_name": {
          "type": "string"
        },
        "illuma_response": {
          "type": "string"
        },
        "is_console": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "sequence": {
          "type": "integer"
        }
      }
    },
    "entity.FineractLoanRequest": {
      "type": "object",
      "properties": {
        "amortizationType": {
          "type": "integer"
        },
        "charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FineractCharges"
          }
        },
        "clientId": {
          "type": "integer"
        },
        "createStandingInstructionAtDisbursement": {
          "type": "string"
        },
        "dateFormat": {
          "type": "string"
        },
        "enableInstallmentLevelDelinquency": {
          "type": "boolean"
        },
        "expectedDisbursementDate": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "fundId": {},
        "graceOnArrearsAgeing": {
          "type": "integer"
        },
        "graceOnInterestCharged": {
          "type": "integer"
        },
        "graceOnInterestPayment": {
          "type": "integer"
        },
        "graceOnPrincipalPayment": {
          "type": "integer"
        },
        "inArrearsTolerance": {
          "type": "integer"
        },
        "interestCalculationPeriodType": {
          "type": "integer"
        },
        "interestChargedFromDate": {},
        "interestRateFrequencyType": {
          "type": "integer"
        },
        "interestRatePerPeriod": {
          "type": "integer"
        },
        "interestType": {
          "type": "integer"
        },
        "isEqualAmortization": {
          "type": "boolean"
        },
        "isTopup": {
          "type": "string"
        },
        "linkAccountId": {
          "type": "string"
        },
        "loanIdToClose": {
          "type": "string"
        },
        "loanTermFrequency": {
          "type": "integer"
        },
        "loanTermFrequencyType": {
          "type": "integer"
        },
        "loanType": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "numberOfRepayments": {
          "type": "integer"
        },
        "principal": {
          "type": "integer"
        },
        "productId": {
          "type": "integer"
        },
        "repaymentEvery": {
          "type": "integer"
        },
        "repaymentFrequencyDayOfWeekType": {
          "type": "string"
        },
        "repaymentFrequencyNthDayType": {
          "type": "string"
        },
        "repaymentFrequencyType": {
          "type": "integer"
        },
        "repaymentsStartingFromDate": {
          "type": "string"
        },
        "submittedOnDate": {
          "type": "string"
        },
        "transactionProcessingStrategyCode": {
          "type": "string"
        }
      }
    },
    "entity.IdentityAddress": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "entity.IdentityVerificationSummary": {
      "type": "object",
      "properties": {
        "identity_verification_status": {
          "type": "integer"
        },
        "is_dob_pass": {
          "type": "boolean"
        },
        "is_full_name_pass": {
          "type": "boolean"
        },
        "is_liveness_pass": {
          "type": "boolean"
        },
        "is_nik_pass": {
          "type": "boolean"
        },
        "is_selfie_pass": {
          "type": "boolean"
        },
        "kyc_event_id": {
          "type": "string"
        },
        "kyc_status": {
          "type": "integer"
        }
      }
    },
    "entity.OccupationType": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.PropertyAddress": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "entity.ScreeningMatrixAutomationStatus": {
      "type": "object",
      "properties": {
        "is_invalid_active": {
          "type": "boolean"
        },
        "is_qualified_active": {
          "type": "boolean"
        }
      }
    },
    "entity.SigningSurveySchedule": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "hour": {
          "type": "string"
        },
        "is_submitted": {
          "type": "boolean"
        }
      }
    },
    "entity.SurveySchedule": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hour": {
          "type": "string"
        },
        "verification_status": {
          "type": "string"
        }
      }
    },
    "integrations.ValidateBankAccountResponse": {
      "type": "object",
      "properties": {
        "bank_account_number": {
          "type": "string"
        },
        "bank_code": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/integrations.ValidateBankAccountResult"
        },
        "status": {
          "type": "string"
        },
        "test": {
          "description": "TO BE Remove after create callback",
          "type": "boolean"
        },
        "updated": {
          "type": "string"
        }
      }
    },
    "integrations.ValidateBankAccountResult": {
      "type": "object",
      "properties": {
        "account_holder_name": {
          "type": "string"
        },
        "is_found": {
          "type": "boolean"
        },
        "is_virtual_account": {
          "type": "boolean"
        },
        "name_matching_result": {
          "type": "string"
        },
        "need_review": {
          "type": "boolean"
        }
      }
    },
    "request.AcceptLoanApplicationOffer": {
      "type": "object",
      "properties": {
        "consent_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request.ConsentType"
          }
        },
        "loan_application_global_trx_id": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "page_no": {
          "type": "integer"
        },
        "source_ip": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "x_point": {
          "type": "integer"
        },
        "y_point": {
          "type": "integer"
        }
      }
    },
    "request.AddOrEditCustomerLoanApplication": {
      "type": "object",
      "required": [
        "income",
        "marital_status"
      ],
      "properties": {
        "income": {
          "type": "number",
          "minimum": 0
        },
        "marital_status": {
          "type": "string",
          "enum": [
            "single",
            "married",
            "divorced",
            "widowed"
          ]
        },
        "spouse_income": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "request.AddOrEditProperty": {
      "type": "object",
      "required": [
        "estimated_property_amount"
      ],
      "properties": {
        "estimated_property_amount": {
          "type": "number"
        }
      }
    },
    "request.ConfirmBorrowerSigned": {
      "type": "object",
      "required": [
        "consent_types"
      ],
      "properties": {
        "consent_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request.ConsentType"
          }
        }
      }
    },
    "request.ConsentType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "request.CreateCustomerEmergencyContactExpressProcess": {
      "type": "object",
      "properties": {
        "consent_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ConsentType"
          }
        },
        "emergency_contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request.CustomerEmergencyContactExpressProcess"
          }
        }
      }
    },
    "request.CreateCustomerEmergencyContactRequest": {
      "type": "object",
      "required": [
        "consent_types",
        "emergency_contacts"
      ],
      "properties": {
        "consent_types": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/entity.ConsentType"
          }
        },
        "emergency_contacts": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/entity.CustomerEmergencyContact"
          }
        }
      }
    },
    "request.CreateDocument": {
      "type": "object",
      "required": [
        "document_type",
        "entity_id",
        "entity_type",
        "title",
        "url"
      ],
      "properties": {
        "document_type": {
          "type": "string"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "request.Customer": {
      "type": "object",
      "required": [
        "customer_address",
        "date_of_birth",
        "family_card_file_url",
        "government_id",
        "identity_card_file_url",
        "marital_status",
        "occupation",
        "property"
      ],
      "properties": {
        "customer_address": {
          "$ref": "#/definitions/entity.CustomerAddress"
        },
        "date_of_birth": {
          "type": "string"
        },
        "family_card_address": {
          "$ref": "#/definitions/entity.FamilyCardAddress"
        },
        "family_card_document_number": {
          "type": "string"
        },
        "family_card_file_name": {
          "type": "string"
        },
        "family_card_file_url": {
          "type": "string"
        },
        "government_id": {
          "type": "string"
        },
        "identity_address": {
          "$ref": "#/definitions/entity.IdentityAddress"
        },
        "identity_card_file_name": {
          "type": "string"
        },
        "identity_card_file_url": {
          "type": "string"
        },
        "is_customer_address_based_on_identity_card": {
          "type": "boolean"
        },
        "is_family_card_address_based_on_family_card": {
          "type": "boolean"
        },
        "is_property_address_based_on_identity_card": {
          "type": "boolean"
        },
        "marital_status": {
          "type": "string",
          "enum": [
            "single",
            "married",
            "divorced",
            "widowed"
          ]
        },
        "occupation": {
          "$ref": "#/definitions/entity.CreateCustomerOccupationParams"
        },
        "place_of_birth": {
          "type": "string"
        },
        "property": {
          "$ref": "#/definitions/entity.CreateCustomerPropertyParams"
        },
        "property_address": {
          "$ref": "#/definitions/entity.PropertyAddress"
        }
      }
    },
    "request.CustomerEmergencyContactExpressProcess": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "relationship_code": {
          "type": "string"
        }
      }
    },
    "request.CustomerExpressProcess": {
      "type": "object",
      "required": [
        "customer_address",
        "date_of_birth",
        "government_id",
        "identity_address",
        "marital_status",
        "occupation",
        "property",
        "property_address"
      ],
      "properties": {
        "customer_address": {
          "$ref": "#/definitions/entity.CustomerAddress"
        },
        "date_of_birth": {
          "type": "string"
        },
        "family_card_address": {
          "$ref": "#/definitions/entity.FamilyCardAddress"
        },
        "family_card_document_number": {
          "type": "string"
        },
        "government_id": {
          "type": "string"
        },
        "identity_address": {
          "$ref": "#/definitions/entity.IdentityAddress"
        },
        "marital_status": {
          "type": "string",
          "enum": [
            "single",
            "married",
            "divorced",
            "widowed"
          ]
        },
        "occupation": {
          "$ref": "#/definitions/request.OccupationExpressProcessParams"
        },
        "place_of_birth": {
          "type": "string"
        },
        "property": {
          "$ref": "#/definitions/request.PropertyExpressProcessParams"
        },
        "property_address": {
          "$ref": "#/definitions/entity.PropertyAddress"
        }
      }
    },
    "request.DeleteLoanApplicationContractParticipantRequest": {
      "type": "object",
      "required": [
        "id_participant"
      ],
      "properties": {
        "id_participant": {
          "type": "string"
        }
      }
    },
    "request.DeleteLoanApplicationDebtConsolidationRequest": {
      "type": "object",
      "required": [
        "id_debt"
      ],
      "properties": {
        "id_debt": {
          "type": "string"
        }
      }
    },
    "request.FineractDebtConsoleRequest": {
      "type": "object",
      "required": [
        "id",
        "is_console"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "is_console": {
          "type": "boolean"
        }
      }
    },
    "request.Fundings": {
      "type": "object",
      "required": [
        "doc_master_ids",
        "loan_amount",
        "type"
      ],
      "properties": {
        "doc_master_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loan_amount": {
          "type": "number"
        },
        "type": {
          "type": "string",
          "enum": [
            "maksimal",
            "perdana"
          ]
        }
      }
    },
    "request.GetLoanApplicationDocumentsByDocumentTypes": {
      "type": "object",
      "properties": {
        "document_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "request.InsertLoanApplicationContractParticipantRequest": {
      "type": "object",
      "required": [
        "participant_name",
        "participant_relation"
      ],
      "properties": {
        "participant_name": {
          "type": "string"
        },
        "participant_relation": {
          "type": "string"
        }
      }
    },
    "request.InsertLoanApplicationDebtConsolidationRequest": {
      "type": "object",
      "required": [
        "creditor_name",
        "debt_amount",
        "debtor_name"
      ],
      "properties": {
        "creditor_name": {
          "type": "string"
        },
        "debt_amount": {
          "type": "number"
        },
        "debtor_name": {
          "type": "string"
        }
      }
    },
    "request.LoanAdditionalDoc": {
      "type": "object",
      "required": [
        "doc_master_ids"
      ],
      "properties": {
        "doc_master_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "request.LoanApplicationCreditAnalystActivityRequest": {
      "type": "object",
      "required": [
        "user_credit_limit"
      ],
      "properties": {
        "user_credit_limit": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "request.LoanApplicationInsurancePolicyRequest": {
      "type": "object",
      "required": [
        "agreement_date",
        "insurance_partner",
        "insurance_product",
        "policy_amount",
        "policy_issue_date",
        "policy_number"
      ],
      "properties": {
        "agreement_date": {
          "type": "string"
        },
        "insurance_partner": {
          "type": "string"
        },
        "insurance_product": {
          "type": "string"
        },
        "policy_amount": {
          "type": "number"
        },
        "policy_issue_date": {
          "type": "string"
        },
        "policy_number": {
          "type": "string"
        }
      }
    },
    "request.LoanApplicationLoanPurposesBody": {
      "type": "object",
      "required": [
        "loan_amount",
        "loan_purposes"
      ],
      "properties": {
        "loan_amount": {
          "type": "number"
        },
        "loan_purposes": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/request.LoanPurpose"
          }
        }
      }
    },
    "request.LoanApplicationRevivedRequest": {
      "type": "object",
      "required": [
        "revive_reason"
      ],
      "properties": {
        "revive_reason": {
          "type": "string"
        }
      }
    },
    "request.LoanApplicationSurveyResultRequest": {
      "type": "object",
      "required": [
        "debtor_income_after_survey"
      ],
      "properties": {
        "debtor_income_after_survey": {
          "type": "number",
          "minimum": 0
        },
        "debtor_spouse_income_after_survey": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "request.LoanPurpose": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "request.LoanPurposeExpressProcess": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "request.LoanScenario": {
      "type": "object",
      "required": [
        "credit_limit_amount",
        "doc_master_ids"
      ],
      "properties": {
        "credit_limit_amount": {
          "type": "number",
          "minimum": 0
        },
        "doc_master_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "document_type": {
          "type": "string"
        }
      }
    },
    "request.OccupationExpressProcessParams": {
      "type": "object",
      "required": [
        "income"
      ],
      "properties": {
        "business_address": {
          "type": "string"
        },
        "business_category": {
          "type": "string"
        },
        "company_name": {
          "type": "string"
        },
        "employment_contract_category": {
          "type": "string"
        },
        "employment_document_type": {
          "type": "string"
        },
        "employment_document_type_detail": {
          "type": "string"
        },
        "employment_length_category": {
          "type": "string"
        },
        "estimated_revenue_type": {
          "type": "string"
        },
        "income": {
          "type": "number"
        },
        "occupation_type_code": {
          "type": "string"
        },
        "professional_field_type": {
          "type": "string"
        },
        "professional_status_type": {
          "type": "string"
        },
        "spouse_income": {
          "type": "number"
        }
      }
    },
    "request.PaymentValidationRequest": {
      "type": "object",
      "required": [
        "bank_account_number",
        "bank_code",
        "reference_id",
        "reference_type"
      ],
      "properties": {
        "bank_account_number": {
          "type": "string"
        },
        "bank_code": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "reference_type": {
          "type": "string"
        }
      }
    },
    "request.ProcessLoanApplicationBorrowerCreditAgreement": {
      "type": "object",
      "required": [
        "consent_types",
        "otp"
      ],
      "properties": {
        "consent_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request.ConsentType"
          }
        },
        "otp": {
          "type": "string"
        },
        "page_no": {
          "type": "integer"
        },
        "source_ip": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "x_point": {
          "type": "integer"
        },
        "y_point": {
          "type": "integer"
        }
      }
    },
    "request.PropertyExpressProcessParams": {
      "type": "object",
      "required": [
        "certificate_owner",
        "certificate_owner_presence",
        "certificate_type_code",
        "estimated_price_amount",
        "is_certificate_on_collateralized",
        "property_type_code"
      ],
      "properties": {
        "building_area": {
          "type": "number"
        },
        "certificate_owner": {
          "type": "string",
          "enum": [
            "myself",
            "partner",
            "parents",
            "siblings",
            "parents_in_law",
            "friend",
            "previous_owner",
            "extended_family",
            "others"
          ]
        },
        "certificate_owner_detail": {
          "type": "string"
        },
        "certificate_owner_presence": {
          "type": "string",
          "enum": [
            "present_and_agree",
            "not_present_and_deceased",
            "not_present_and_deceased_with_inheritance_letter",
            "not_present_and_agree",
            "not_present_and_not_agree"
          ]
        },
        "certificate_type_code": {
          "type": "string"
        },
        "estimated_price_amount": {
          "type": "number"
        },
        "is_certificate_on_collateralized": {
          "type": "string",
          "enum": [
            "yes_for_house_loan",
            "yes_for_others",
            "no"
          ]
        },
        "is_owner_present": {
          "type": "boolean"
        },
        "is_property_inhabited": {
          "type": "boolean"
        },
        "property_resident": {
          "type": "string"
        },
        "property_type_code": {
          "type": "string"
        },
        "surface_area": {
          "type": "number"
        }
      }
    },
    "request.ReasonDetail": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "detail_reason": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "request.ResetEKycRequest": {
      "type": "object",
      "required": [
        "loan_application_id"
      ],
      "properties": {
        "loan_application_id": {
          "type": "string"
        }
      }
    },
    "request.ScreeningProfileMatrixRules": {
      "type": "object",
      "required": [
        "allowed_certificate_owner_presence",
        "allowed_certificate_owners",
        "allowed_certificate_types",
        "allowed_collateral_status",
        "allowed_income_types",
        "allowed_property_types",
        "estimated_loan_amount",
        "estimated_loan_operator",
        "estimated_property_operator",
        "estimated_property_value",
        "income_operator",
        "income_threshold",
        "maximum_age",
        "minimum_age"
      ],
      "properties": {
        "allowed_certificate_owner_presence": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowed_certificate_owners": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowed_certificate_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowed_collateral_status": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowed_income_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowed_property_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "estimated_loan_amount": {
          "type": "integer"
        },
        "estimated_loan_operator": {
          "type": "string"
        },
        "estimated_property_operator": {
          "type": "string"
        },
        "estimated_property_value": {
          "type": "integer"
        },
        "income_operator": {
          "type": "string"
        },
        "income_threshold": {
          "type": "integer"
        },
        "is_active": {
          "type": "boolean"
        },
        "is_auto_prequal_status_active": {
          "type": "boolean"
        },
        "is_check_certificate_owner_presence": {
          "type": "boolean"
        },
        "maximum_age": {
          "type": "integer"
        },
        "minimum_age": {
          "type": "integer"
        }
      }
    },
    "request.SignBorrowerCreditAgreement": {
      "type": "object",
      "required": [
        "otp"
      ],
      "properties": {
        "otp": {
          "type": "string"
        },
        "page_no": {
          "type": "integer"
        },
        "source_ip": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "x_point": {
          "type": "integer"
        },
        "y_point": {
          "type": "integer"
        }
      }
    },
    "request.SignCreditAgreement": {
      "type": "object",
      "required": [
        "file",
        "otp"
      ],
      "properties": {
        "file": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "page_no": {
          "type": "integer"
        },
        "source_ip": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "x_point": {
          "type": "integer"
        },
        "y_point": {
          "type": "integer"
        }
      }
    },
    "request.SubmitApplicationAppraisal": {
      "type": "object"
    },
    "request.SubmitApplicationCertificate": {
      "type": "object"
    },
    "request.SubmitApplicationVerification": {
      "type": "object"
    },
    "request.SubmitLoanApplication": {
      "type": "object",
      "required": [
        "customer",
        "loan_amount",
        "loan_purposes",
        "property",
        "self_declared_payment_bandwidth",
        "user_id"
      ],
      "properties": {
        "attribution_tracking": {
          "$ref": "#/definitions/entity.AdjustTrackingInfo"
        },
        "customer": {
          "$ref": "#/definitions/request.AddOrEditCustomerLoanApplication"
        },
        "form_version": {
          "type": "string"
        },
        "global_trx_id": {
          "type": "string"
        },
        "is_partner": {
          "type": "boolean"
        },
        "is_skipped_crm_sync": {
          "type": "boolean"
        },
        "loan_amount": {
          "type": "number"
        },
        "loan_purposes": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/request.LoanPurpose"
          }
        },
        "property": {
          "$ref": "#/definitions/request.AddOrEditProperty"
        },
        "referral_code": {
          "type": "string"
        },
        "self_declared_payment_bandwidth": {
          "type": "number",
          "minimum": 0
        },
        "sub_referral_code": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "request.SubmitLoanApplicationExpressProcess": {
      "type": "object",
      "required": [
        "customer",
        "loan_amount",
        "loan_purposes",
        "reference_loan_id",
        "self_declared_payment_bandwidth",
        "source",
        "user"
      ],
      "properties": {
        "customer": {
          "$ref": "#/definitions/request.CustomerExpressProcess"
        },
        "emergency_contact": {
          "$ref": "#/definitions/request.CreateCustomerEmergencyContactExpressProcess"
        },
        "is_activity_skipped": {
          "type": "boolean"
        },
        "loan_amount": {
          "type": "number"
        },
        "loan_purposes": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/request.LoanPurposeExpressProcess"
          }
        },
        "notes": {
          "type": "string"
        },
        "reference_loan_id": {
          "type": "string"
        },
        "self_declared_payment_bandwidth": {
          "type": "number",
          "minimum": 0
        },
        "source": {
          "type": "string"
        },
        "survey_schedule": {
          "$ref": "#/definitions/request.SurveyScheduleExpressProcess"
        },
        "user": {
          "$ref": "#/definitions/request.User"
        }
      }
    },
    "request.SubmitLoanApplicationFromPartner": {
      "type": "object",
      "required": [
        "customer",
        "loan_amount",
        "loan_purposes",
        "self_declared_payment_bandwidth",
        "user"
      ],
      "properties": {
        "customer": {
          "$ref": "#/definitions/request.Customer"
        },
        "loan_amount": {
          "type": "number"
        },
        "loan_purposes": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/request.LoanPurpose"
          }
        },
        "self_declared_payment_bandwidth": {
          "type": "number",
          "minimum": 0
        },
        "user": {
          "$ref": "#/definitions/request.User"
        }
      }
    },
    "request.SubmitLoanApplicationRevision": {
      "type": "object",
      "required": [
        "document_revision",
        "revision_master_data_id"
      ],
      "properties": {
        "document_revision": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "note": {
          "type": "string"
        },
        "notes_schema_version": {
          "type": "string"
        },
        "revision_master_data_id": {
          "type": "string"
        }
      }
    },
    "request.SubmitMultiLoanProcess": {
      "type": "object",
      "required": [
        "fundings",
        "loan_application_id"
      ],
      "properties": {
        "fundings": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/request.Fundings"
          }
        },
        "loan_application_id": {
          "type": "string"
        }
      }
    },
    "request.SubmitSupportingDocumentReadinessBody": {
      "type": "object",
      "properties": {
        "disable_status_automation": {
          "type": "boolean"
        },
        "finance_report_business": {
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        },
        "others_identity_card_completeness": {
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        },
        "property_certificate": {
          "description": "Document Stage 4",
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        },
        "property_photo": {
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        },
        "revision_collateral_data": {
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        },
        "revision_income_data": {
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        },
        "revision_loan_purpose": {
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        },
        "revision_personal_data": {
          "description": "Document Stage 11",
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        },
        "transaction_record": {
          "type": "string",
          "enum": [
            "not_completed",
            "completed",
            "revision_required"
          ]
        }
      }
    },
    "request.SubmitSupportingDocumentTypes": {
      "type": "object",
      "properties": {
        "finance_report_business_document_type": {
          "type": "string",
          "enum": [
            "image",
            "pdf"
          ]
        },
        "property_certificate_document_type": {
          "type": "string",
          "enum": [
            "image",
            "pdf"
          ]
        },
        "transaction_record_document_type": {
          "description": "PIJ-911 - additional document for customer occupation type pengusaha",
          "type": "string",
          "enum": [
            "image",
            "pdf"
          ]
        }
      }
    },
    "request.SurveyScheduleExpressProcess": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "survey_date": {
          "type": "string"
        },
        "survey_hour": {
          "type": "string"
        }
      }
    },
    "request.UpdateLoanApplicationRevision": {
      "type": "object",
      "required": [
        "document_readiness"
      ],
      "properties": {
        "document_readiness": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "note": {
          "type": "string"
        }
      }
    },
    "request.UpdateLoanApplicationStatusBody": {
      "type": "object",
      "required": [
        "reason_ids"
      ],
      "properties": {
        "estimated_loan_upper_limit": {
          "type": "number"
        },
        "fineract_product_external_id": {
          "type": "integer"
        },
        "interest": {
          "type": "number"
        },
        "is_allowed_resubmission": {
          "type": "boolean"
        },
        "is_express_process": {
          "type": "boolean"
        },
        "is_skipped_crm_sync": {
          "type": "boolean"
        },
        "lender_id": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "reason_ids": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/request.ReasonDetail"
          }
        },
        "recommended_loan_upper_limit_after_survey": {
          "type": "number"
        },
        "status_id": {
          "type": "string"
        },
        "status_name": {
          "type": "string"
        },
        "tenor": {
          "type": "integer"
        }
      }
    },
    "request.UpdateLoanApplicationVerifiedIncome": {
      "type": "object",
      "required": [
        "verified_income"
      ],
      "properties": {
        "annual_interest_rate": {
          "type": "number",
          "minimum": 0
        },
        "credit_limit": {
          "type": "number",
          "minimum": 0
        },
        "tenure": {
          "type": "integer",
          "minimum": 0
        },
        "verified_income": {
          "type": "number",
          "minimum": 0
        },
        "verified_spouse_income": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "request.UpdateLoanApplicationVerifiedProperty": {
      "type": "object",
      "required": [
        "appraisal_date",
        "verified_property_value",
        "verified_property_value_upper_limit"
      ],
      "properties": {
        "appraisal_date": {
          "type": "string"
        },
        "verified_property_value": {
          "type": "number"
        },
        "verified_property_value_upper_limit": {
          "type": "number"
        }
      }
    },
    "request.UpdateLoanRequiredAdditionalDocsSubmitTimeByActionType": {
      "type": "object",
      "required": [
        "action_type",
        "doc_master_id"
      ],
      "properties": {
        "action_type": {
          "type": "string",
          "enum": [
            "upload",
            "delete"
          ]
        },
        "doc_master_id": {
          "type": "string"
        }
      }
    },
    "request.UpdateSalesEvaluationCreditAnalyst": {
      "type": "object",
      "required": [
        "credit_analyst_id",
        "loan_application_id"
      ],
      "properties": {
        "credit_analyst_id": {
          "type": "string"
        },
        "loan_application_id": {
          "type": "string"
        }
      }
    },
    "request.UpdateSalesEvaluationRelationshipManager": {
      "type": "object",
      "required": [
        "loan_application_id",
        "relationship_manager_id"
      ],
      "properties": {
        "loan_application_id": {
          "type": "string"
        },
        "relationship_manager_id": {
          "type": "string"
        }
      }
    },
    "request.UpdateSelfDeclaredPaymentBandwidth": {
      "type": "object",
      "required": [
        "self_declared_payment_bandwidth"
      ],
      "properties": {
        "self_declared_payment_bandwidth": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "request.UpdateSelfieImage": {
      "type": "object"
    },
    "request.UpsertIdentityVerificationDataBody": {
      "type": "object",
      "required": [
        "identity_verification_data"
      ],
      "properties": {
        "identity_verification_data": {
          "type": "string"
        },
        "identity_verification_request": {
          "type": "string"
        },
        "selfie_s3_url": {
          "type": "string"
        },
        "success_at": {
          "type": "string"
        }
      }
    },
    "request.UpsertLoanApplicationSnapshotByCustomerBody": {
      "type": "object",
      "required": [
        "customer_id"
      ],
      "properties": {
        "customer_email": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "customer_name": {
          "type": "string"
        },
        "property_address_city_name": {
          "type": "string"
        },
        "property_address_district_name": {
          "type": "string"
        },
        "property_type": {
          "type": "string"
        }
      }
    },
    "request.UpsertSigningSurveySchedule": {
      "type": "object",
      "required": [
        "loan_application_id",
        "signing_survey_date",
        "signing_survey_hour"
      ],
      "properties": {
        "loan_application_id": {
          "type": "string"
        },
        "signing_survey_address": {
          "type": "string"
        },
        "signing_survey_date": {
          "type": "string"
        },
        "signing_survey_hour": {
          "type": "string"
        }
      }
    },
    "request.UpsertSurveyProposedDate": {
      "type": "object",
      "required": [
        "loan_application_id"
      ],
      "properties": {
        "loan_application_id": {
          "type": "string"
        },
        "proposed_schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.SurveySchedule"
          }
        }
      }
    },
    "request.UpsertSurveyScheduleDate": {
      "type": "object",
      "required": [
        "loan_application_id",
        "survey_date",
        "survey_hour"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "loan_application_id": {
          "type": "string"
        },
        "survey_date": {
          "type": "string"
        },
        "survey_hour": {
          "type": "string"
        }
      }
    },
    "request.User": {
      "type": "object",
      "required": [
        "consent_types",
        "name"
      ],
      "properties": {
        "consent_types": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/request.ConsentType"
          }
        },
        "email": {
          "type": "string"
        },
        "is_subscribed": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "platform_type": {
          "type": "string"
        },
        "referral_code": {
          "type": "string"
        }
      }
    },
    "request.VerifyLoanApplicationCustomerIdentityRequest": {
      "type": "object",
      "required": [
        "date_of_birth",
        "government_id",
        "name"
      ],
      "properties": {
        "date_of_birth": {
          "type": "string"
        },
        "government_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 2
        }
      }
    },
    "response.Paginator": {
      "type": "object",
      "properties": {
        "current_page": {
          "type": "integer"
        },
        "item_from": {
          "type": "integer"
        },
        "item_to": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "next_page": {
          "type": "integer"
        },
        "previous_page": {
          "type": "integer"
        },
        "total_items": {
          "type": "integer"
        },
        "total_pages": {
          "type": "integer"
        }
      }
    },
    "response.PaginatorResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "message": {
          "type": "string"
        },
        "paginator": {
          "$ref": "#/definitions/response.Paginator"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "response.StandardResponse": {
      "type": "object",
      "properties": {
        "data": {},
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "presenters.AdminResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "rm_detail": {
          "$ref": "#/definitions/presenters.RmDetailResponse"
        },
        "role": {
          "$ref": "#/definitions/presenters.RoleResponse"
        }
      }
    },
    "presenters.BasicAdminResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "presenters.BasicRoleResponse": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/queries.Status"
        },
        "total_user": {
          "type": "integer"
        }
      }
    },
    "presenters.LenderResponse": {
      "type": "object",
      "properties": {
        "bank_account_name": {
          "type": "string"
        },
        "bank_account_number": {
          "type": "string"
        },
        "bank_admin_fee_account_name": {
          "type": "string"
        },
        "bank_admin_fee_account_number": {
          "type": "string"
        },
        "bank_admin_fee_bank_name": {
          "type": "string"
        },
        "bank_branch": {
          "type": "string"
        },
        "bank_name": {
          "type": "string"
        },
        "city": {
          "$ref": "#/definitions/presenters.CityResponse"
        },
        "city_name": {
          "type": "string"
        },
        "cooperation_agreement_date": {
          "type": "string"
        },
        "cooperation_agreement_number": {
          "type": "string"
        },
        "customs_identification_number": {
          "type": "string"
        },
        "district": {
          "$ref": "#/definitions/presenters.DistrictResponse"
        },
        "founding_date": {
          "type": "string"
        },
        "founding_place": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "initial_fee_payment_preference": {
          "type": "integer"
        },
        "last_deed_change_date": {
          "type": "string"
        },
        "last_deed_change_number": {
          "type": "string"
        },
        "lender_type": {
          "type": "string"
        },
        "lender_type_config": {
          "$ref": "#/definitions/domains.FeeConfig"
        },
        "lender_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "looker_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "origination_fee": {
          "type": "number"
        },
        "origination_rate": {
          "type": "number"
        },
        "payment_account_detail": {
          "$ref": "#/definitions/presenters.PaymentAccount"
        },
        "pic_email": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone": {
          "type": "string"
        },
        "province": {
          "$ref": "#/definitions/presenters.ProvinceResponse"
        },
        "referral_fee": {
          "type": "number"
        },
        "referral_rate": {
          "type": "number"
        },
        "servicing_fee": {
          "type": "number"
        },
        "servicing_rate": {
          "type": "number"
        },
        "status": {
          "$ref": "#/definitions/domains.LenderStatus"
        },
        "status_name": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "village": {
          "$ref": "#/definitions/presenters.VillageResponse"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "presenters.PermissionResponse": {
      "type": "object",
      "properties": {
        "access_control": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "category": {
          "type": "string"
        },
        "child_permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.PermissionResponse"
          }
        },
        "description": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "role_access_control": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sequence": {
          "type": "integer"
        },
        "status": {
          "$ref": "#/definitions/queries.Status"
        }
      }
    },
    "presenters.RelationshipManagerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.RmDetailResponse": {
      "type": "object",
      "properties": {
        "freshsales_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "placement": {
          "type": "string"
        }
      }
    },
    "presenters.RoleResponse": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.PermissionResponse"
          }
        },
        "platform": {
          "$ref": "#/definitions/queries.PlatformType"
        },
        "status": {
          "$ref": "#/definitions/queries.Status"
        },
        "total_user": {
          "type": "integer"
        }
      }
    },
    "presenters.UserDetailResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_subscribed": {
          "type": "boolean"
        },
        "is_verified": {
          "type": "boolean"
        },
        "kyc_event_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "registered_at": {
          "type": "string"
        },
        "verified_at": {
          "type": "string"
        }
      }
    },
    "presenters.UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.UserWithKycEventIDResponse": {
      "type": "object",
      "properties": {
        "kyc_event_id": {
          "type": "string"
        }
      }
    },
    "presenters.ValidateOTPResponse": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        }
      }
    },
    "queries.PlatformType": {
      "type": "string",
      "enum": [
        "admin",
        "other",
        "lender",
        "relationship_manager",
        "agent"
      ],
      "x-enum-varnames": [
        "PlatformTypeAdmin",
        "PlatformTypeOther",
        "PlatformTypeLender",
        "PlatformTypeRelationshipManager",
        "PlatformTypeAgent"
      ]
    },
    "queries.Status": {
      "type": "string",
      "enum": [
        "active",
        "inactive"
      ],
      "x-enum-varnames": [
        "StatusActive",
        "StatusInactive"
      ]
    },
    "domains.OfferDocumentData": {
      "type": "object",
      "properties": {
        "creditor": {
          "$ref": "#/definitions/domains.Person"
        },
        "creditor_spouse": {
          "$ref": "#/definitions/domains.Person"
        },
        "property_certificate": {
          "type": "string"
        },
        "property_certificate_number": {
          "type": "string"
        },
        "property_owner": {
          "$ref": "#/definitions/domains.Person"
        },
        "property_owner_relation": {
          "type": "string"
        },
        "property_owner_spouse": {
          "$ref": "#/definitions/domains.Person"
        }
      }
    },
    "domains.Person": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/domains.PersonAddress"
        },
        "birth_date": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "government_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "domains.PersonAddress": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "village": {
          "type": "string"
        }
      }
    },
    "presenters.AddressResponse": {
      "type": "object",
      "properties": {
        "address_link": {
          "type": "string"
        },
        "address_type": {
          "type": "string"
        },
        "city": {
          "$ref": "#/definitions/presenters.CityResponse"
        },
        "country_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "district": {
          "$ref": "#/definitions/presenters.DistrictResponse"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "location_gmap": {
          "$ref": "#/definitions/presenters.Coordinate"
        },
        "province": {
          "$ref": "#/definitions/presenters.ProvinceResponse"
        },
        "street": {
          "type": "string"
        },
        "street_2": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "village": {
          "$ref": "#/definitions/presenters.VillageResponse"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "presenters.AgentResponse": {
      "type": "object",
      "properties": {
        "account_number": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.AddressResponse"
          }
        },
        "bank_name": {
          "type": "string"
        },
        "customer_register_agent_referral_link": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicDocumentResponse"
          }
        },
        "domicile": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "identity_number": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "partner_form_agent_referral_link": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "referral_code": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "tax_identity_number": {
          "type": "string"
        }
      }
    },
    "presenters.BasicAgentResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "presenters.BasicAgentResponseWithCompanyName": {
      "type": "object",
      "properties": {
        "company_name": {
          "type": "string"
        },
        "customer_register_agent_referral_link": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "partner_form_agent_referral_link": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "referral_code": {
          "type": "string"
        }
      }
    },
    "presenters.BasicCertificateOwnerConsentTypeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_owner_present": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.BasicCompanyAgentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pic_email": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string"
        }
      }
    },
    "presenters.BasicCustomerResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.BasicDocumentResponse": {
      "type": "object",
      "properties": {
        "document_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "presenters.BasicFormMasterDataResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.BasicOccupationTypeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.BasicPropertyCertificateTypeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.BasicPropertyTypeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.BusinessSectorResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.CityResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "province_id": {
          "type": "string"
        }
      }
    },
    "presenters.CompanyAgentRepsonse": {
      "type": "object",
      "properties": {
        "addresses": {
          "$ref": "#/definitions/presenters.AddressResponse"
        },
        "customer_register_agent_referral_link": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "member_count": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "partner_form_agent_referral_link": {
          "type": "string"
        },
        "pic_email": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string"
        },
        "referral_code": {
          "type": "string"
        },
        "relationship_managers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.RelationshipManagerResponse"
          }
        },
        "status": {
          "type": "string"
        }
      }
    },
    "presenters.Coordinate": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "presenters.CustomerEmergencyContactRelationshipResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "relation": {
          "type": "string"
        },
        "relation_display_name": {
          "type": "string"
        }
      }
    },
    "presenters.CustomerEmergencyContactResponse": {
      "type": "object",
      "properties": {
        "emergency_contact_relationship": {
          "$ref": "#/definitions/presenters.CustomerEmergencyContactRelationshipResponse"
        },
        "id": {
          "type": "string"
        },
        "is_verified": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "presenters.DistrictResponse": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.DocumentResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "document_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "reference_id": {
          "type": "string"
        },
        "reference_type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "presenters.GenericAgentResponse": {
      "type": "object",
      "properties": {
        "agent_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "referral_code": {
          "type": "string"
        },
        "relationship_managers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.RelationshipManagerResponse"
          }
        }
      }
    },
    "presenters.MasterDataResponse": {
      "type": "object",
      "properties": {
        "business_categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "business_sectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "certificate_owner_consent_type": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicCertificateOwnerConsentTypeResponse"
          }
        },
        "certificate_owner_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "collateralized_certificate_status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "education_level": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "emergency_contact_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "employment_contract_categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "employment_document_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "employment_length_categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "estimated_revenue_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "family_card_address_occupants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "job_industries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "legal_entity_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "marital_status": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "occupation_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicOccupationTypeResponse"
          }
        },
        "professional_field_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "professional_status_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "property_certificate_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicPropertyCertificateTypeResponse"
          }
        },
        "property_resident": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        },
        "property_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicPropertyTypeResponse"
          }
        },
        "provinces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.ProvinceResponse"
          }
        },
        "signing_checklists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
          }
        }
      }
    },
    "presenters.OccupationTypeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.PropertyCertificateTypeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.PropertyResponse": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/presenters.AddressResponse"
        },
        "building_area": {
          "type": "number"
        },
        "certificate_number": {
          "type": "string"
        },
        "certificate_owner": {
          "type": "string"
        },
        "certificate_owner_detail": {
          "type": "string"
        },
        "certificate_owner_presence": {
          "type": "string"
        },
        "certificate_type": {
          "$ref": "#/definitions/presenters.BasicPropertyCertificateTypeResponse"
        },
        "certificate_type_detail": {
          "type": "string"
        },
        "certificate_type_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/presenters.BasicCustomerResponse"
        },
        "customer_id": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicDocumentResponse"
          }
        },
        "estimated_price_amount": {
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "is_certificate_on_collateralized": {
          "type": "string"
        },
        "is_owner_present": {
          "type": "boolean"
        },
        "is_property_inhabited": {
          "type": "boolean"
        },
        "njop_amount": {
          "type": "number"
        },
        "property_resident": {
          "type": "string"
        },
        "property_type": {
          "$ref": "#/definitions/presenters.BasicPropertyTypeResponse"
        },
        "property_type_detail": {
          "type": "string"
        },
        "property_type_id": {
          "type": "string"
        },
        "surface_area": {
          "type": "number"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "presenters.ProvinceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.PublicCompanyAgentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.VillageResponse": {
      "type": "object",
      "properties": {
        "district_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "requests.AddNewAddress": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "street": {
          "type": "string"
        },
        "street_2": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "requests.AddNewProperty": {
      "type": "object",
      "required": [
        "address",
        "certificate_owner",
        "certificate_type_id",
        "estimated_price_amount",
        "is_certificate_on_collateralized",
        "property_type_id"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/requests.AddNewAddress"
        },
        "certificate_owner": {
          "type": "string",
          "enum": [
            "myself",
            "partner",
            "parents",
            "siblings",
            "parents_in_law",
            "friend",
            "previous_owner",
            "extended_family",
            "others"
          ]
        },
        "certificate_owner_detail": {
          "type": "string"
        },
        "certificate_owner_presence": {
          "type": "string",
          "enum": [
            "present_and_agree",
            "not_present_and_deceased",
            "not_present_and_deceased_with_inheritance_letter",
            "not_present_and_agree",
            "not_present_and_not_agree"
          ]
        },
        "certificate_type_detail": {
          "type": "string"
        },
        "certificate_type_id": {
          "type": "string"
        },
        "estimated_price_amount": {
          "type": "number"
        },
        "is_certificate_on_collateralized": {
          "type": "string",
          "enum": [
            "yes_for_house_loan",
            "yes_for_others",
            "no"
          ]
        },
        "is_owner_present": {
          "type": "boolean"
        },
        "property_type_detail": {
          "type": "string"
        },
        "property_type_id": {
          "type": "string"
        }
      }
    },
    "requests.AddOrEditCustomer": {
      "type": "object"
    },
    "requests.AddSpouseCustomer": {
      "type": "object",
      "required": [
        "address",
        "email",
        "identity_number",
        "name",
        "phone_number"
      ],
      "properties": {
        "address": {
          "type": "string",
          "minLength": 8
        },
        "email": {
          "type": "string"
        },
        "identity_number": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "requests.AdditionalIdentity": {
      "type": "object",
      "properties": {
        "identity_number": {
          "type": "string"
        },
        "is_property_owner": {
          "type": "boolean"
        },
        "is_spouse": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "requests.Address": {
      "type": "object",
      "properties": {
        "is_spouse": {
          "type": "boolean"
        },
        "street": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "village": {
          "type": "string"
        }
      }
    },
    "requests.ConsentType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "requests.CreateCompanyAgent": {
      "type": "object",
      "required": [
        "name",
        "pic_address",
        "village_id"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 2
        },
        "pic_address": {
          "type": "string"
        },
        "pic_email": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "referral_code": {
          "type": "string",
          "maxLength": 20
        },
        "relationship_managers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.RelationshipManagerRequest"
          }
        },
        "territory_district_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "requests.CreateCustomerAndRelatedAddressRequest": {
      "type": "object",
      "properties": {
        "customer_address": {
          "$ref": "#/definitions/requests.CustomerAddress"
        },
        "family_card_address": {
          "$ref": "#/definitions/requests.FamilyCardAddress"
        },
        "property_address": {
          "$ref": "#/definitions/requests.PropertyAddress"
        }
      }
    },
    "requests.CreateCustomerEmergencyContactParams": {
      "type": "object",
      "required": [
        "consent_types",
        "emergency_contacts"
      ],
      "properties": {
        "consent_types": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/requests.ConsentType"
          }
        },
        "emergency_contacts": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/requests.CustomerEmergencyContact"
          }
        }
      }
    },
    "requests.CreateCustomerWithPropertyParams": {
      "type": "object",
      "required": [
        "email",
        "name",
        "phone_number"
      ],
      "properties": {
        "consented_at": {
          "type": "integer",
          "minimum": 0
        },
        "date_of_birth": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "income": {
          "type": "number",
          "minimum": 0
        },
        "marital_status": {
          "type": "string",
          "enum": [
            "single",
            "married",
            "divorced",
            "widowed"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "property": {
          "$ref": "#/definitions/requests.PropertyParams"
        },
        "spouse_income": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "requests.CreateDocument": {
      "type": "object",
      "required": [
        "document_type",
        "entity_id",
        "entity_type",
        "title",
        "url"
      ],
      "properties": {
        "document_type": {
          "type": "string"
        },
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "lender_document_id": {
          "type": "string"
        },
        "payload": {
          "type": "object",
          "additionalProperties": true
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "requests.CreateReferralCode": {
      "type": "object",
      "required": [
        "entity_id",
        "entity_type",
        "referral_code"
      ],
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "referral_code": {
          "type": "string",
          "maxLength": 20
        }
      }
    },
    "requests.CustomerAddress": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "requests.CustomerEmergencyContact": {
      "type": "object",
      "required": [
        "name",
        "phone_number",
        "relationship_id"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 2
        },
        "phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "relationship_id": {
          "type": "string"
        }
      }
    },
    "requests.CustomerOccupationsParams": {
      "type": "object",
      "required": [
        "customer_id",
        "occupations"
      ],
      "properties": {
        "customer_id": {
          "type": "string"
        },
        "occupations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.OccupationParams"
          }
        },
        "self_declared_payment_bandwidth": {
          "type": "number"
        }
      }
    },
    "requests.DeleteDocumentsByCustomerAndDocumentTypesRequest": {
      "type": "object",
      "properties": {
        "customer_document_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customer_id": {
          "type": "string"
        },
        "occupation_document_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "property_document_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "requests.EditCustomerGovernmentBody": {
      "type": "object",
      "required": [
        "date_of_birth",
        "government_id",
        "name"
      ],
      "properties": {
        "date_of_birth": {
          "type": "string"
        },
        "government_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 2
        }
      }
    },
    "requests.FamilyCardAddress": {
      "type": "object",
      "properties": {
        "occupants": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "requests.Identity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "requests.OccupationParams": {
      "type": "object",
      "required": [
        "occupation_type_id"
      ],
      "properties": {
        "business_address": {
          "type": "string"
        },
        "business_sector": {
          "type": "string"
        },
        "company_name": {
          "type": "string"
        },
        "employment_contract_category": {
          "type": "string"
        },
        "employment_document_type": {
          "type": "string"
        },
        "employment_length_category": {
          "type": "string"
        },
        "estimated_revenue_type": {
          "type": "string"
        },
        "income": {
          "type": "number",
          "minimum": 0
        },
        "income_month_2": {
          "type": "number",
          "minimum": 0
        },
        "income_month_3": {
          "type": "number",
          "minimum": 0
        },
        "income_month_4": {
          "type": "number",
          "minimum": 0
        },
        "income_month_5": {
          "type": "number",
          "minimum": 0
        },
        "income_month_6": {
          "type": "number",
          "minimum": 0
        },
        "is_legitimate_business": {
          "type": "boolean"
        },
        "is_spouse": {
          "type": "boolean"
        },
        "job_industry": {
          "type": "string"
        },
        "legal_entity_type": {
          "type": "string"
        },
        "occupation_id": {
          "type": "string"
        },
        "occupation_type_detail": {
          "type": "string"
        },
        "occupation_type_id": {
          "type": "string"
        },
        "professional_status_type": {
          "type": "string"
        }
      }
    },
    "requests.ProcessFamilyCardOCRRequest": {
      "type": "object",
      "properties": {
        "bypass_ocr": {
          "type": "boolean"
        },
        "family_card_address": {
          "$ref": "#/definitions/requests.FamilyCardAddress"
        },
        "family_card_document_id": {
          "type": "string"
        },
        "is_family_card_address_based_on_family_card": {
          "type": "boolean"
        }
      }
    },
    "requests.ProcessIdentityCardOCRRequest": {
      "type": "object",
      "properties": {
        "bypass_ocr": {
          "type": "boolean"
        },
        "customer_address": {
          "$ref": "#/definitions/requests.CustomerAddress"
        },
        "identity_card_document_id": {
          "type": "string"
        },
        "is_customer_address_based_on_identity_card": {
          "type": "boolean"
        },
        "is_property_address_based_on_identity_card": {
          "type": "boolean"
        },
        "property_address": {
          "$ref": "#/definitions/requests.PropertyAddress"
        }
      }
    },
    "requests.PropertyAddress": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "requests.PropertyParams": {
      "type": "object",
      "properties": {
        "estimated_property_amount": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "requests.ReferralCodeMigration": {
      "type": "object",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "requests.RelationshipManagerRequest": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "requests.SelfieImageData": {
      "type": "object"
    },
    "requests.SubCustomer": {
      "type": "object",
      "properties": {
        "customer_type": {
          "type": "string"
        },
        "government_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_property_owner": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "requests.UpdateCityReachAvailability": {
      "type": "object",
      "required": [
        "id",
        "is_reach_available"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "is_reach_available": {
          "type": "boolean"
        }
      }
    },
    "requests.UpdateCityReachAvailabilityParam": {
      "type": "object",
      "required": [
        "cities"
      ],
      "properties": {
        "cities": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/requests.UpdateCityReachAvailability"
          }
        }
      }
    },
    "requests.UpdateCompanyAgent": {
      "type": "object",
      "required": [
        "name",
        "pic_address",
        "referral_code",
        "village_id"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 2
        },
        "pic_address": {
          "type": "string"
        },
        "pic_email": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "referral_code": {
          "type": "string",
          "maxLength": 20
        },
        "relationship_managers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.RelationshipManagerRequest"
          }
        },
        "territory_district_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "requests.UpdateCustomer": {
      "type": "object",
      "required": [
        "marital_status"
      ],
      "properties": {
        "additional_identities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.AdditionalIdentity"
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.UpsertAddress"
          }
        },
        "marital_status": {
          "type": "string",
          "enum": [
            "single",
            "married",
            "divorced",
            "widowed"
          ]
        }
      }
    },
    "requests.UpdateCustomerAccountMutationPasswordRequest": {
      "type": "object",
      "required": [
        "account_mutation_password"
      ],
      "properties": {
        "account_mutation_password": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "requests.UpdateCustomerDetail": {
      "type": "object",
      "required": [
        "date_of_birth",
        "email",
        "government_id",
        "marital_status",
        "name",
        "phone_number"
      ],
      "properties": {
        "address_link": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emergency_contact": {
          "$ref": "#/definitions/requests.CustomerEmergencyContact"
        },
        "government_id": {
          "type": "string"
        },
        "marital_status": {
          "type": "string",
          "enum": [
            "single",
            "married",
            "divorced",
            "widowed"
          ]
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        }
      }
    },
    "requests.UpdateCustomerManual": {
      "type": "object",
      "required": [
        "customer_address",
        "date_of_birth",
        "government_id",
        "name"
      ],
      "properties": {
        "customer_address": {
          "$ref": "#/definitions/requests.CustomerAddress"
        },
        "date_of_birth": {
          "type": "string"
        },
        "family_card_id": {
          "type": "string"
        },
        "government_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "place_of_birth": {
          "type": "string"
        },
        "property_address": {
          "$ref": "#/definitions/requests.PropertyAddress"
        }
      }
    },
    "requests.UpdateCustomerNameAndGovernmentId": {
      "type": "object",
      "required": [
        "government_id",
        "name"
      ],
      "properties": {
        "government_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 2
        }
      }
    },
    "requests.UpdateCustomerWithPropertyParams": {
      "type": "object",
      "required": [
        "email",
        "name",
        "phone_number"
      ],
      "properties": {
        "consented_at": {
          "type": "integer",
          "minimum": 0
        },
        "date_of_birth": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "income": {
          "type": "number",
          "minimum": 0
        },
        "marital_status": {
          "type": "string",
          "enum": [
            "single",
            "married",
            "divorced",
            "widowed"
          ]
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "property": {
          "$ref": "#/definitions/requests.PropertyParams"
        },
        "spouse_income": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "requests.UpdateOccupationDetail": {
      "type": "object",
      "required": [
        "income",
        "occupation_type_id"
      ],
      "properties": {
        "business_sector": {
          "type": "string"
        },
        "income": {
          "type": "number",
          "minimum": 0
        },
        "is_legitimate_business": {
          "type": "boolean"
        },
        "occupation_type_detail": {
          "type": "string"
        },
        "occupation_type_id": {
          "type": "string"
        },
        "spouse_income": {
          "type": "number",
          "minimum": 0
        }
      }
    },
    "requests.UpdateOccupationV2": {
      "type": "object",
      "properties": {
        "business_address": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "hr_phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "linkedin_profile_url": {
          "type": "string"
        },
        "website_url": {
          "type": "string"
        }
      }
    },
    "requests.UpdatePersonalData": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.Address"
          }
        },
        "date_of_birth": {
          "type": "string"
        },
        "education_level": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "identities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.Identity"
          }
        },
        "marital_status": {
          "type": "string"
        },
        "mother_maiden_name": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "place_of_birth": {
          "type": "string"
        },
        "religion": {
          "type": "string"
        },
        "sub_customer": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.SubCustomer"
          }
        }
      }
    },
    "requests.UpdatePropertyDetail": {
      "type": "object",
      "required": [
        "is_certificate_on_collateralized"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/requests.AddNewAddress"
        },
        "building_area": {
          "type": "number"
        },
        "building_permit_image_url": {
          "type": "string"
        },
        "certificate_image_urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "certificate_number": {
          "type": "string"
        },
        "certificate_owner": {
          "type": "string",
          "enum": [
            "myself",
            "partner",
            "parents",
            "siblings",
            "parents_in_law",
            "friend",
            "previous_owner",
            "extended_family",
            "others"
          ]
        },
        "certificate_owner_detail": {
          "type": "string"
        },
        "certificate_owner_presence": {
          "type": "string",
          "enum": [
            "present_and_agree",
            "not_present_and_deceased",
            "not_present_and_deceased_with_inheritance_letter",
            "not_present_and_agree",
            "not_present_and_not_agree"
          ]
        },
        "certificate_type_detail": {
          "type": "string"
        },
        "certificate_type_id": {
          "type": "string"
        },
        "estimated_price_amount": {
          "type": "number",
          "minimum": 0
        },
        "is_certificate_on_collateralized": {
          "type": "string",
          "enum": [
            "yes_for_house_loan",
            "yes_for_others",
            "no"
          ]
        },
        "is_owner_present": {
          "type": "boolean"
        },
        "is_property_inhabited": {
          "type": "boolean"
        },
        "land_and_building_tax_image_url": {
          "type": "string"
        },
        "njop_amount": {
          "type": "number"
        },
        "property_resident": {
          "type": "string"
        },
        "property_type_detail": {
          "type": "string"
        },
        "property_type_id": {
          "type": "string"
        },
        "surface_area": {
          "type": "number"
        },
        "tax_return_payable_letter_url": {
          "type": "string"
        },
        "video_url": {
          "type": "string"
        }
      }
    },
    "requests.UpdatePropertyV2": {
      "type": "object",
      "properties": {
        "building_area": {
          "type": "number"
        },
        "surface_area": {
          "type": "number"
        }
      }
    },
    "requests.UpdateReferralCode": {
      "type": "object",
      "required": [
        "entity_id",
        "entity_type",
        "referral_code"
      ],
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "type": "string"
        },
        "referral_code": {
          "type": "string",
          "maxLength": 20
        }
      }
    },
    "requests.UpsertAddress": {
      "type": "object",
      "properties": {
        "address_link": {
          "type": "string"
        },
        "address_type": {
          "type": "string",
          "enum": [
            "domicile",
            "identity_address",
            "office"
          ]
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "street": {
          "type": "string"
        }
      }
    },
    "requests.UpsertCustomerDataRequest": {
      "type": "object",
      "required": [
        "date_of_birth",
        "email",
        "government_id",
        "name",
        "parent_customer_id",
        "phone_number",
        "street",
        "type",
        "village_id"
      ],
      "properties": {
        "date_of_birth": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "government_id": {
          "type": "string"
        },
        "is_property_owner": {
          "type": "boolean"
        },
        "is_spouse": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "parent_customer_id": {
          "type": "string"
        },
        "phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "street": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "requests.UpsertCustomerOccupationParams": {
      "type": "object",
      "properties": {
        "business_address": {
          "type": "string"
        },
        "business_category": {
          "type": "string"
        },
        "business_sector": {
          "type": "string"
        },
        "company_name": {
          "type": "string"
        },
        "employment_contract_category": {
          "type": "string"
        },
        "employment_document_type": {
          "type": "string"
        },
        "employment_document_type_detail": {
          "type": "string"
        },
        "employment_length_category": {
          "type": "string"
        },
        "estimated_revenue_type": {
          "type": "string"
        },
        "income": {
          "type": "number"
        },
        "job_industry": {
          "type": "string"
        },
        "legal_entity_type": {
          "type": "string"
        },
        "occupation_type_id": {
          "type": "string"
        },
        "professional_field_type": {
          "type": "string"
        },
        "professional_status_type": {
          "type": "string"
        },
        "spouse_income": {
          "type": "number"
        }
      }
    },
    "requests.UpsertCustomerPropertyParams": {
      "type": "object",
      "required": [
        "certificate_owner",
        "certificate_owner_presence",
        "certificate_type_id",
        "is_certificate_on_collateralized",
        "property_type_id"
      ],
      "properties": {
        "building_area": {
          "type": "number"
        },
        "certificate_owner": {
          "type": "string",
          "enum": [
            "myself",
            "partner",
            "parents",
            "siblings",
            "parents_in_law",
            "friend",
            "previous_owner",
            "extended_family",
            "others"
          ]
        },
        "certificate_owner_detail": {
          "type": "string"
        },
        "certificate_owner_presence": {
          "type": "string",
          "enum": [
            "present_and_agree",
            "not_present_and_deceased",
            "not_present_and_deceased_with_inheritance_letter",
            "not_present_and_agree",
            "not_present_and_not_agree"
          ]
        },
        "certificate_type_detail": {
          "type": "string"
        },
        "certificate_type_id": {
          "type": "string"
        },
        "estimated_price_amount": {
          "type": "number"
        },
        "is_certificate_on_collateralized": {
          "type": "string",
          "enum": [
            "yes_for_house_loan",
            "yes_for_others",
            "no"
          ]
        },
        "is_owner_present": {
          "type": "boolean"
        },
        "is_property_inhabited": {
          "type": "boolean"
        },
        "property_resident": {
          "type": "string"
        },
        "property_type_detail": {
          "type": "string"
        },
        "property_type_id": {
          "type": "string"
        },
        "surface_area": {
          "type": "number"
        }
      }
    },
    "domains.FeeConfig": {
      "type": "object",
      "properties": {
        "origination": {
          "$ref": "#/definitions/domains.Origination"
        },
        "referral": {
          "$ref": "#/definitions/domains.Referral"
        },
        "syndication": {
          "$ref": "#/definitions/domains.Syndication"
        }
      }
    },
    "domains.GetLenderAddons": {
      "type": "object",
      "properties": {
        "looker_url": {
          "type": "string"
        }
      }
    },
    "domains.LenderInterest": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "lender_id": {
          "type": "string"
        },
        "lender_interest": {
          "type": "number"
        },
        "master_lender_interest_rate": {
          "$ref": "#/definitions/domains.MasterLenderInterestRate"
        },
        "master_lender_interest_rate_id": {
          "type": "string"
        },
        "platform_interest": {
          "type": "number"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "domains.LenderPreferenceRule": {
      "type": "object",
      "properties": {
        "abl_matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "id": {
          "type": "string"
        },
        "lender_id": {
          "type": "string"
        },
        "max_loan_facilities_amount_matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "max_loan_facilities_count_matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "non_abl_matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "preference_rules": {
          "$ref": "#/definitions/domains.PreferenceRules"
        },
        "status": {
          "$ref": "#/definitions/queries.LenderPreferenceRuleStatus"
        }
      }
    },
    "domains.LenderStatus": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_include_in_permission": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "sequence": {
          "type": "integer"
        },
        "user_description": {
          "type": "string"
        },
        "user_display_name": {
          "type": "string"
        }
      }
    },
    "domains.MasterLenderInterestRate": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_active": {
          "type": "boolean"
        },
        "updated_at": {
          "type": "integer"
        },
        "value": {
          "type": "integer"
        }
      }
    },
    "domains.MatchmakingRate": {
      "type": "object",
      "properties": {
        "lender_id": {
          "type": "string"
        },
        "lender_name": {
          "type": "string"
        },
        "rank": {
          "type": "integer"
        },
        "rate": {
          "type": "number"
        }
      }
    },
    "domains.MatchmakingResult": {
      "type": "object",
      "properties": {
        "heloc_id": {
          "type": "string"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/domains.MatchmakingRate"
          }
        }
      }
    },
    "domains.Origination": {
      "type": "object",
      "properties": {
        "origination_fee": {
          "type": "number"
        },
        "origination_rate": {
          "type": "number"
        },
        "servicing_fee": {
          "type": "number"
        },
        "servicing_rate": {
          "type": "number"
        }
      }
    },
    "domains.PreferenceRules": {
      "type": "object",
      "properties": {
        "collateralized": {
          "type": "boolean"
        },
        "dbr": {
          "type": "number"
        },
        "higher_dbr": {
          "type": "number"
        },
        "ltv": {
          "type": "number"
        },
        "max_age_employee": {
          "type": "integer"
        },
        "max_age_entrepreneur": {
          "type": "integer"
        },
        "max_age_professional": {
          "type": "integer"
        },
        "max_facility": {
          "type": "integer"
        },
        "max_installment": {
          "type": "integer"
        },
        "min_age": {
          "type": "integer"
        },
        "min_facility": {
          "type": "integer"
        },
        "min_fixed_income": {
          "type": "integer"
        },
        "min_income_higher_dbr": {
          "type": "integer"
        },
        "min_irregular_income": {
          "type": "integer"
        },
        "min_working_time_fixed_income": {
          "type": "integer"
        },
        "min_working_time_irregular_income": {
          "type": "integer"
        },
        "property_value": {
          "type": "integer"
        },
        "retirement_age": {
          "type": "integer"
        }
      }
    },
    "domains.Referral": {
      "type": "object",
      "properties": {
        "referral_fee": {
          "type": "number"
        },
        "referral_rate": {
          "type": "number"
        }
      }
    },
    "domains.Syndication": {
      "type": "object",
      "properties": {
        "arranger_fee": {
          "type": "number"
        },
        "arranger_rate": {
          "type": "number"
        },
        "member_fee": {
          "type": "number"
        },
        "member_rate": {
          "type": "number"
        }
      }
    },
    "integrations.Field": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "presenters.AgreementLoanServicing": {
      "type": "object",
      "properties": {
        "approved_date": {
          "type": "integer"
        },
        "customer_name": {
          "type": "string"
        },
        "dpd": {
          "type": "integer"
        },
        "heloc_id": {
          "type": "string"
        },
        "interest": {
          "type": "number"
        },
        "is_servicing_created": {
          "type": "boolean"
        },
        "last_withdrawal_status": {
          "type": "string"
        },
        "loan_principal": {
          "type": "integer"
        },
        "offer_id": {
          "type": "string"
        },
        "offer_limit": {
          "type": "number"
        },
        "paid_month": {
          "type": "integer"
        },
        "remaining_credit_limit": {
          "type": "integer"
        },
        "tenor": {
          "type": "integer"
        }
      }
    },
    "presenters.AgreementResponse": {
      "type": "object",
      "properties": {
        "administration_fee": {
          "type": "integer"
        },
        "agreed_monthly_payment": {
          "type": "number"
        },
        "bank_transfer_fee": {
          "type": "integer"
        },
        "daily_penalty_rate": {
          "type": "number"
        },
        "debt_consolidation_amount": {
          "type": "integer"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/presenters.BasicDocumentResponse"
          }
        },
        "due_date": {
          "type": "integer"
        },
        "duty_stamp": {
          "type": "integer"
        },
        "early_settlement_penalty_rate": {
          "type": "number"
        },
        "heloc_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "initial_disbursement": {
          "type": "integer"
        },
        "initial_disbursement_date": {
          "type": "integer"
        },
        "initial_fee_payment_option": {
          "type": "integer"
        },
        "initial_statement_date": {
          "type": "integer"
        },
        "interest": {
          "type": "number"
        },
        "is_document_confirmed": {
          "type": "boolean"
        },
        "life_insurance": {
          "type": "integer"
        },
        "minimum_payment_amount": {
          "type": "integer"
        },
        "minimum_payment_calculation": {
          "type": "integer"
        },
        "minimum_payment_rate": {
          "type": "number"
        },
        "monthly_statement_date": {
          "type": "integer"
        },
        "notary_cost": {
          "type": "integer"
        },
        "offer_id": {
          "type": "string"
        },
        "offer_limit": {
          "type": "number"
        },
        "origination_fee": {
          "type": "integer"
        },
        "origination_rate": {
          "type": "number"
        },
        "other_fee": {
          "type": "integer"
        },
        "product_option_id": {
          "type": "string"
        },
        "property_insurance": {
          "type": "integer"
        },
        "provisioning_fee": {
          "type": "integer"
        },
        "reference_number": {
          "type": "string"
        },
        "referral_fee": {
          "type": "integer"
        },
        "remaining_disbursement_amount": {
          "type": "integer"
        },
        "servicing_fee": {
          "type": "integer"
        },
        "servicing_rate": {
          "type": "number"
        },
        "start_date": {
          "type": "integer"
        },
        "tenor": {
          "type": "integer"
        },
        "transfer_amount": {
          "type": "integer"
        },
        "transfer_date": {
          "type": "integer"
        }
      }
    },
    "presenters.BasicLenderResponse": {
      "type": "object",
      "properties": {
        "city_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lender_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pic_email": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone": {
          "type": "string"
        },
        "status_name": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "presenters.BasicMemberResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "lender_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.BasicOfferResponse": {
      "type": "object",
      "properties": {
        "additional_docs_requested_at": {
          "type": "integer"
        },
        "approval_note": {
          "type": "string"
        },
        "approved_at": {
          "type": "integer"
        },
        "customer_name": {
          "type": "string"
        },
        "heloc_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "interest": {
          "type": "number"
        },
        "offer_limit": {
          "type": "number"
        },
        "offer_type": {
          "type": "string"
        },
        "reject_note": {
          "type": "string"
        },
        "status_id": {
          "type": "string"
        },
        "tenor": {
          "type": "integer"
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "presenters.BasicOfferStatusResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "system_description": {
          "type": "string"
        }
      }
    },
    "presenters.BasicProductResponse": {
      "type": "object",
      "properties": {
        "credit_reduction_rate": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "is_down_credit": {
          "type": "boolean"
        },
        "is_withdraw": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "repayment_type": {
          "type": "string"
        }
      }
    },
    "presenters.DocURLRepsonse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "presenters.DocumentLoanProposalResponse": {
      "type": "object",
      "properties": {
        "is_exist": {
          "type": "boolean"
        },
        "is_pending": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "presenters.DocumentWithPresignedUrlResponse": {
      "type": "object",
      "properties": {
        "document_type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "presign_url": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "presenters.InsuranceTypeResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "presenters.MemberResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lender": {
          "$ref": "#/definitions/presenters.LenderResponse"
        },
        "lender_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "presenters.OfferStatusLog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "status_change_date": {
          "type": "integer"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "presenters.OfferV2Response": {
      "type": "object",
      "properties": {
        "approved_date": {
          "type": "string"
        },
        "customer_name": {
          "type": "string"
        },
        "heloc_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "offer_type": {
          "type": "string"
        },
        "recommended_loan_upper_limit_after_survey": {
          "type": "number"
        },
        "status": {
          "$ref": "#/definitions/presenters.Status"
        },
        "syndication_status": {
          "$ref": "#/definitions/presenters.Status"
        },
        "syndication_type": {
          "type": "string"
        }
      }
    },
    "presenters.OriginationResponse": {
      "type": "object",
      "properties": {
        "customer_name": {
          "type": "string"
        },
        "global_trx_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "interest": {
          "type": "number"
        },
        "loan_id": {
          "type": "string"
        },
        "loan_limit": {
          "type": "number"
        },
        "property_address_city_name": {
          "type": "string"
        },
        "property_address_district_name": {
          "type": "string"
        },
        "property_type": {
          "type": "string"
        },
        "status_description": {
          "type": "string"
        },
        "status_name": {
          "type": "string"
        },
        "tenure": {
          "type": "integer"
        }
      }
    },
    "presenters.PaymentAccount": {
      "type": "object",
      "properties": {
        "is_token_registered": {
          "type": "boolean"
        },
        "payment_gateway_id": {
          "type": "string"
        }
      }
    },
    "presenters.Status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "presenters.SyndicationDetailStatusResponse": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        }
      }
    },
    "queries.LenderPreferenceRuleStatus": {
      "type": "string",
      "enum": [
        "active",
        "inactive"
      ],
      "x-enum-varnames": [
        "LenderPreferenceRuleStatusActive",
        "LenderPreferenceRuleStatusInactive"
      ]
    },
    "requests.AcceptOfferBody": {
      "type": "object",
      "properties": {
        "bypass_digital_signature": {
          "type": "boolean"
        },
        "offerID": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        }
      }
    },
    "requests.AddNewLender": {
      "type": "object",
      "required": [
        "customs_identification_number",
        "name",
        "pic_email",
        "pic_name",
        "pic_phone",
        "street",
        "village_id"
      ],
      "properties": {
        "arranger_fee": {
          "type": "number",
          "minimum": 0
        },
        "arranger_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "bank_account_name": {
          "type": "string"
        },
        "bank_account_number": {
          "type": "string"
        },
        "bank_admin_fee_account_name": {
          "type": "string"
        },
        "bank_admin_fee_account_number": {
          "type": "string"
        },
        "bank_admin_fee_bank_name": {
          "type": "string"
        },
        "bank_branch": {
          "type": "string"
        },
        "bank_name": {
          "type": "string"
        },
        "cooperation_agreement_date": {
          "type": "string"
        },
        "cooperation_agreement_number": {
          "type": "string"
        },
        "customs_identification_number": {
          "type": "string"
        },
        "founding_date": {
          "type": "string"
        },
        "founding_place": {
          "type": "string"
        },
        "initial_fee_payment_preference": {
          "type": "integer"
        },
        "is_active": {
          "type": "boolean"
        },
        "last_deed_change_date": {
          "type": "string"
        },
        "last_deed_change_number": {
          "type": "string"
        },
        "lender_type": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "member_fee": {
          "type": "number",
          "minimum": 0
        },
        "member_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "origination_fee": {
          "type": "number",
          "minimum": 0
        },
        "origination_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "pic_email": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "referral_fee": {
          "type": "number",
          "minimum": 0
        },
        "referral_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "servicing_fee": {
          "type": "number",
          "minimum": 0
        },
        "servicing_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string"
        }
      }
    },
    "requests.AddNewMember": {
      "type": "object",
      "required": [
        "email",
        "lender_id",
        "name",
        "phone_number",
        "role_id"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "lender_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "role_id": {
          "type": "string"
        }
      }
    },
    "requests.AssignApplication": {
      "type": "object",
      "required": [
        "approved_at",
        "customer_name",
        "heloc_id",
        "lender_ids",
        "offer_type",
        "participants",
        "product_id"
      ],
      "properties": {
        "approved_at": {
          "type": "integer",
          "minimum": 0
        },
        "customer_name": {
          "type": "string"
        },
        "heloc_id": {
          "type": "string"
        },
        "lender_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offer_type": {
          "type": "string"
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/requests.Participant"
          }
        },
        "product_id": {
          "type": "string"
        }
      }
    },
    "requests.ConfirmOfferRequest": {
      "type": "object",
      "required": [
        "offer_id"
      ],
      "properties": {
        "is_confirm": {
          "type": "boolean"
        },
        "offer_id": {
          "type": "string"
        }
      }
    },
    "requests.CreateLenderPreferenceRuleRequest": {
      "type": "object",
      "required": [
        "abl_matrix",
        "max_loan_facilities_amount_matrix",
        "max_loan_facilities_count_matrix",
        "non_abl_matrix",
        "preference_rules",
        "status"
      ],
      "properties": {
        "abl_matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "max_loan_facilities_amount_matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "max_loan_facilities_count_matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "non_abl_matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "preference_rules": {
          "$ref": "#/definitions/requests.PreferenceRules"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "requests.CreateOffer": {
      "type": "object",
      "required": [
        "customer_name",
        "interest",
        "lender_id",
        "limit",
        "loan_id",
        "tenure"
      ],
      "properties": {
        "customer_name": {
          "type": "string"
        },
        "global_trx_id": {
          "type": "string"
        },
        "interest": {
          "type": "number"
        },
        "lender_id": {
          "type": "string"
        },
        "limit": {
          "type": "integer"
        },
        "loan_id": {
          "type": "string"
        },
        "tenure": {
          "type": "integer"
        }
      }
    },
    "requests.CreateProduct": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "credit_reduction_rate": {
          "type": "number",
          "minimum": 0
        },
        "description": {
          "type": "string"
        },
        "is_down_credit": {
          "type": "boolean"
        },
        "is_withdraw": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "repayment_type": {
          "type": "string"
        }
      }
    },
    "requests.DeleteMember": {
      "type": "object",
      "required": [
        "member_id",
        "role_id",
        "user_id"
      ],
      "properties": {
        "member_id": {
          "type": "string"
        },
        "role_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        }
      }
    },
    "requests.LenderInterestRequest": {
      "type": "object",
      "required": [
        "master_lender_interest_rate_id"
      ],
      "properties": {
        "lender_id": {
          "type": "string"
        },
        "lender_interest": {
          "type": "integer"
        },
        "master_lender_interest_rate_id": {
          "type": "string"
        },
        "platform_interest": {
          "type": "integer"
        }
      }
    },
    "requests.Participant": {
      "type": "object",
      "properties": {
        "lender_distribution_rate": {
          "type": "integer"
        },
        "lender_id": {
          "type": "string"
        },
        "participant_type": {
          "type": "string"
        }
      }
    },
    "requests.PreferenceRules": {
      "type": "object",
      "properties": {
        "collateralized": {
          "type": "boolean"
        },
        "dbr": {
          "type": "number",
          "minimum": 0
        },
        "higher_dbr": {
          "type": "number",
          "minimum": 0
        },
        "ltv": {
          "type": "number",
          "minimum": 0
        },
        "max_age_employee": {
          "type": "integer",
          "minimum": 0
        },
        "max_age_entrepreneur": {
          "type": "integer",
          "minimum": 0
        },
        "max_age_professional": {
          "type": "integer",
          "minimum": 0
        },
        "max_facility": {
          "type": "integer",
          "minimum": 0
        },
        "max_installment": {
          "type": "integer",
          "minimum": 0
        },
        "min_age": {
          "type": "integer",
          "minimum": 0
        },
        "min_facility": {
          "type": "integer",
          "minimum": 0
        },
        "min_fixed_income": {
          "type": "integer",
          "minimum": 0
        },
        "min_income_higher_dbr": {
          "type": "integer",
          "minimum": 0
        },
        "min_irregular_income": {
          "type": "integer",
          "minimum": 0
        },
        "min_working_time_fixed_income": {
          "type": "integer",
          "minimum": 0
        },
        "min_working_time_irregular_income": {
          "type": "integer",
          "minimum": 0
        },
        "property_value": {
          "type": "integer",
          "minimum": 0
        },
        "retirement_age": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "requests.PreloadLenderDocument": {
      "type": "object",
      "required": [
        "lender_document_id",
        "offer_id"
      ],
      "properties": {
        "lender_document_id": {
          "type": "string"
        },
        "offer_id": {
          "type": "string"
        }
      }
    },
    "requests.SignDocument": {
      "type": "object",
      "required": [
        "offer_id"
      ],
      "properties": {
        "file": {
          "type": "string"
        },
        "offer_id": {
          "type": "string"
        },
        "otp": {
          "type": "string"
        },
        "signing_info": {
          "$ref": "#/definitions/requests.SigningInfo"
        },
        "sourceIP": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "userAgent": {
          "type": "string"
        }
      }
    },
    "requests.SigningInfo": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer"
        },
        "x": {
          "type": "integer"
        },
        "y": {
          "type": "integer"
        }
      }
    },
    "requests.SubmitOfferInsurance": {
      "type": "object",
      "required": [
        "insurance_product_id",
        "offer_id",
        "premium_cost"
      ],
      "properties": {
        "insurance_product_id": {
          "type": "string"
        },
        "offer_id": {
          "type": "string"
        },
        "premium_cost": {
          "type": "integer"
        }
      }
    },
    "requests.UpdateLender": {
      "type": "object",
      "required": [
        "customs_identification_number",
        "name",
        "pic_email",
        "pic_name",
        "pic_phone",
        "street",
        "village_id"
      ],
      "properties": {
        "arranger_fee": {
          "type": "number",
          "minimum": 0
        },
        "arranger_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "bank_account_name": {
          "type": "string"
        },
        "bank_account_number": {
          "type": "string"
        },
        "bank_admin_fee_account_name": {
          "type": "string"
        },
        "bank_admin_fee_account_number": {
          "type": "string"
        },
        "bank_admin_fee_bank_name": {
          "type": "string"
        },
        "bank_branch": {
          "type": "string"
        },
        "bank_name": {
          "type": "string"
        },
        "cooperation_agreement_date": {
          "type": "string"
        },
        "cooperation_agreement_number": {
          "type": "string"
        },
        "customs_identification_number": {
          "type": "string"
        },
        "founding_date": {
          "type": "string"
        },
        "founding_place": {
          "type": "string"
        },
        "initial_fee_payment_preference": {
          "type": "integer"
        },
        "last_deed_change_date": {
          "type": "string"
        },
        "last_deed_change_number": {
          "type": "string"
        },
        "lender_type": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "member_fee": {
          "type": "number",
          "minimum": 0
        },
        "member_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "origination_fee": {
          "type": "number",
          "minimum": 0
        },
        "origination_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "pic_email": {
          "type": "string"
        },
        "pic_name": {
          "type": "string"
        },
        "pic_phone": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        },
        "referral_fee": {
          "type": "number",
          "minimum": 0
        },
        "referral_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "servicing_fee": {
          "type": "number",
          "minimum": 0
        },
        "servicing_rate": {
          "type": "number",
          "maximum": 1,
          "minimum": 0
        },
        "status_name": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "village_id": {
          "type": "string",
          "minLength": 13
        }
      }
    },
    "requests.UpdateLenderAddons": {
      "type": "object",
      "required": [
        "looker_url"
      ],
      "properties": {
        "looker_url": {
          "type": "string"
        }
      }
    },
    "requests.UpdateLenderStatus": {
      "type": "object",
      "required": [
        "status_name"
      ],
      "properties": {
        "status_name": {
          "type": "string"
        }
      }
    },
    "requests.UpdateMember": {
      "type": "object",
      "required": [
        "email",
        "name",
        "phone_number"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 2
        },
        "phone_number": {
          "type": "string",
          "maxLength": 16,
          "minLength": 8
        }
      }
    },
    "requests.UpdateOfferStatusByIDBody": {
      "type": "object",
      "required": [
        "status_id"
      ],
      "properties": {
        "additional_docs_note": {
          "type": "string",
          "maxLength": 280
        },
        "agreed_monthly_payment": {
          "type": "number",
          "minimum": 0
        },
        "approve_note": {
          "type": "string",
          "maxLength": 280
        },
        "credit_limit": {
          "type": "number"
        },
        "loan_amount": {
          "type": "number",
          "minimum": 0
        },
        "offerID": {
          "type": "string"
        },
        "reject_note": {
          "type": "string",
          "maxLength": 280
        },
        "start_date": {
          "type": "integer"
        },
        "status_id": {
          "type": "string"
        }
      }
    },
    "requests.UpdateProduct": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "credit_reduction_rate": {
          "type": "number",
          "minimum": 0
        },
        "description": {
          "type": "string"
        },
        "is_down_credit": {
          "type": "boolean"
        },
        "is_withdraw": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "repayment_type": {
          "type": "string"
        }
      }
    },
    "requests.UpdateSyndicationStatus": {
      "type": "object",
      "required": [
        "status_id"
      ],
      "properties": {
        "note": {
          "type": "string",
          "maxLength": 280
        },
        "status_id": {
          "type": "string"
        },
        "syndicationID": {
          "type": "string"
        }
      }
    },
    "requests.UpsertAgreement": {
      "type": "object",
      "required": [
        "daily_penalty_rate",
        "due_date",
        "early_settlement_penalty_rate",
        "initial_disbursement",
        "initial_disbursement_date",
        "initial_statement_date",
        "interest",
        "minimum_payment_calculation",
        "monthly_statement_date",
        "offer_limit",
        "tenor",
        "transfer_date"
      ],
      "properties": {
        "administration_fee": {
          "type": "integer",
          "minimum": 0
        },
        "agreed_monthly_payment": {
          "type": "number",
          "minimum": 0
        },
        "bank_transfer_fee": {
          "type": "integer",
          "minimum": 0
        },
        "daily_penalty_rate": {
          "type": "number"
        },
        "debt_consolidation_amount": {
          "type": "integer",
          "minimum": 0
        },
        "due_date": {
          "type": "integer",
          "maximum": 31,
          "minimum": 1
        },
        "duty_stamp": {
          "type": "integer",
          "minimum": 0
        },
        "early_settlement_penalty_rate": {
          "type": "number"
        },
        "initial_disbursement": {
          "type": "integer"
        },
        "initial_disbursement_date": {
          "type": "integer",
          "minimum": 1
        },
        "initial_fee_payment_option": {
          "type": "integer"
        },
        "initial_statement_date": {
          "type": "integer",
          "minimum": 1
        },
        "interest": {
          "type": "number"
        },
        "life_insurance": {
          "type": "integer",
          "minimum": 0
        },
        "minimum_payment_amount": {
          "type": "integer",
          "minimum": 0
        },
        "minimum_payment_calculation": {
          "type": "integer"
        },
        "minimum_payment_rate": {
          "type": "number",
          "minimum": 0
        },
        "monthly_statement_date": {
          "type": "integer",
          "maximum": 31,
          "minimum": 1
        },
        "notary_cost": {
          "type": "integer",
          "minimum": 0
        },
        "offer_limit": {
          "type": "number"
        },
        "origination_fee": {
          "type": "integer",
          "minimum": 0
        },
        "origination_rate": {
          "type": "number",
          "minimum": 0
        },
        "other_fee": {
          "type": "integer",
          "minimum": 0
        },
        "property_insurance": {
          "type": "integer",
          "minimum": 0
        },
        "provisioning_fee": {
          "type": "integer",
          "minimum": 0
        },
        "reference_number": {
          "type": "string"
        },
        "referral_fee": {
          "type": "integer",
          "minimum": 0
        },
        "remaining_disbursement_amount": {
          "type": "integer",
          "minimum": 0
        },
        "servicing_fee": {
          "type": "integer",
          "minimum": 0
        },
        "servicing_rate": {
          "type": "number",
          "minimum": 0
        },
        "start_date": {
          "type": "integer"
        },
        "tenor": {
          "type": "integer"
        },
        "transfer_amount": {
          "type": "integer",
          "minimum": 0
        },
        "transfer_date": {
          "type": "integer",
          "minimum": 1
        }
      }
    }
  }
}