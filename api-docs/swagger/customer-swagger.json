{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/agents": {
            "get": {
                "description": "Get list of sales agents",
                "tags": [
                    "agents"
                ],
                "summary": "List agents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.PaginatorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.AgentResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new sales agent",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Create new agent",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.BasicAgentResponseWithCompanyName"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/agents/district-id/{district_id}": {
            "get": {
                "description": "Check if agents exist in a specific district",
                "tags": [
                    "agents"
                ],
                "summary": "Check agent territory by district ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "District ID",
                        "name": "district_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.GenericAgentResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/agents/referral-code": {
            "post": {
                "description": "Create a new referral code for agent",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Create referral code",
                "parameters": [
                    {
                        "description": "Referral Code data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateReferralCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "patch": {
                "description": "Update referral code for agent",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Update referral code",
                "parameters": [
                    {
                        "description": "Referral Code data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateReferralCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/agents/referral-code/migration": {
            "post": {
                "description": "Migrate referral codes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Referral code migration",
                "parameters": [
                    {
                        "description": "Referral Code Migration data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ReferralCodeMigration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/agents/referral-code/{referral_code}": {
            "get": {
                "description": "Get agent by referral code",
                "tags": [
                    "agents"
                ],
                "summary": "Check referral code owner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Referral Code",
                        "name": "referral_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.GenericAgentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/agents/referral-code/{referral_code}/is-available": {
            "get": {
                "description": "Check if referral code is available",
                "tags": [
                    "agents"
                ],
                "summary": "Check referral code availability",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Referral Code",
                        "name": "referral_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/agents/referral-code/{referral_code}/is-exist": {
            "get": {
                "description": "Check if referral code exists (public)",
                "tags": [
                    "agents"
                ],
                "summary": "Check referral code existence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Referral Code",
                        "name": "referral_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/agents/{id}": {
            "get": {
                "description": "Find agent by UUID",
                "tags": [
                    "agents"
                ],
                "summary": "Get agent by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.AgentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update agent by ID",
                "tags": [
                    "agents"
                ],
                "summary": "Update agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.BasicAgentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/business-sectors": {
            "get": {
                "description": "Get all business sectors",
                "tags": [
                    "business-sectors"
                ],
                "summary": "List all business sectors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.BusinessSectorResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/cities/reach_availability": {
            "patch": {
                "description": "Update reach availability for cities",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Update cities reach availability",
                "parameters": [
                    {
                        "description": "Cities data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCityReachAvailabilityParam"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/cities/{cityID}/districts": {
            "get": {
                "description": "Get all districts in a city",
                "tags": [
                    "locations"
                ],
                "summary": "Get all districts by city ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "cityID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/city/by_name": {
            "get": {
                "description": "Get city by name",
                "tags": [
                    "locations"
                ],
                "summary": "Get city by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City Name",
                        "name": "city_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/company-agents": {
            "get": {
                "description": "Get list of company agents",
                "tags": [
                    "company-agents"
                ],
                "summary": "List company agents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.PaginatorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.CompanyAgentRepsonse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new company agent",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "company-agents"
                ],
                "summary": "Create company agent",
                "parameters": [
                    {
                        "description": "Company Agent data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCompanyAgent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.BasicCompanyAgentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/company-agents/territories/{id}": {
            "get": {
                "description": "Get territories for a company agent",
                "tags": [
                    "company-agents"
                ],
                "summary": "Get company agent territories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.CityResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/company-agents/{id}": {
            "get": {
                "description": "Find company agent by UUID",
                "tags": [
                    "company-agents"
                ],
                "summary": "Get company agent by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.CompanyAgentRepsonse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update company agent by ID",
                "tags": [
                    "company-agents"
                ],
                "summary": "Update company agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company Agent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Company Agent data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCompanyAgent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.BasicCompanyAgentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/by-email": {
            "get": {
                "description": "Find customer by email",
                "tags": [
                    "customers"
                ],
                "summary": "Find customer by email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/by-phone-number": {
            "get": {
                "description": "Find customer by phone number",
                "tags": [
                    "customers"
                ],
                "summary": "Find customer by phone number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone Number",
                        "name": "phone_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/extended": {
            "post": {
                "description": "Create extended customer data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Create customer extended",
                "parameters": [
                    {
                        "description": "Extended data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AddOrEditCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/list/by-phone-number": {
            "get": {
                "description": "Find customers by phone number",
                "tags": [
                    "customers"
                ],
                "summary": "Find customers by phone number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone Number",
                        "name": "phone_number",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/list/distinct/by-phone-numbers": {
            "get": {
                "description": "Find distinct customers by multiple phone numbers",
                "tags": [
                    "customers"
                ],
                "summary": "Find distinct customers by phone numbers",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Phone Numbers",
                        "name": "phone_numbers",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/search": {
            "get": {
                "description": "Get all customers by search query",
                "tags": [
                    "customers"
                ],
                "summary": "Get all customers by search",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/sub-customer": {
            "post": {
                "description": "Upsert sub customer data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Upsert sub customer data",
                "parameters": [
                    {
                        "description": "Sub customer data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpsertCustomerDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/with-property": {
            "post": {
                "description": "Create customer and property data",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Create customer with property",
                "parameters": [
                    {
                        "description": "Customer and property data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCustomerWithPropertyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}": {
            "get": {
                "description": "Find customer by ID",
                "tags": [
                    "customers"
                ],
                "summary": "Find customer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update customer by ID",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/account-mutation-password": {
            "put": {
                "description": "Update account mutation password for a customer",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer account mutation password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCustomerAccountMutationPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/address/with-related-address": {
            "post": {
                "description": "Create customer and related address (deprecated)",
                "tags": [
                    "customers"
                ],
                "summary": "Create customer and related address (deprecated)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer and address data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCustomerAndRelatedAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/details": {
            "put": {
                "description": "Update detail for a customer",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer detail",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCustomerDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/emergency-contact": {
            "put": {
                "description": "Update emergency contact for a customer",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer emergency contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Emergency contact",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCustomerEmergencyContactParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create emergency contact for a customer",
                "tags": [
                    "customers"
                ],
                "summary": "Create customer emergency contact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Emergency contact",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCustomerEmergencyContactParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/emergency-contact-from-partner": {
            "post": {
                "description": "Create emergency contact from partner",
                "tags": [
                    "customers"
                ],
                "summary": "Create customer emergency contact from partner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Emergency contact",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCustomerEmergencyContactParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/emergency-contacts": {
            "get": {
                "description": "Get emergency contacts by customer ID",
                "tags": [
                    "customers"
                ],
                "summary": "Get customer emergency contacts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.CustomerEmergencyContactResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/extended": {
            "put": {
                "description": "Update extended customer data",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer extended",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Extended data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AddOrEditCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/name-and-government-id": {
            "put": {
                "description": "Update customer name and government ID by customer ID",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer name and government ID by customer ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Name and government ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCustomerNameAndGovernmentId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/occupations": {
            "post": {
                "description": "Upsert (insert/update) customer occupation",
                "tags": [
                    "occupation"
                ],
                "summary": "Upsert customer occupation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Occupation data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpsertCustomerOccupationParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/occupations/{occupationID}": {
            "put": {
                "description": "Update occupation by ID",
                "tags": [
                    "occupation"
                ],
                "summary": "Update occupation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Occupation ID",
                        "name": "occupationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/occupations/{occupationID}/detail": {
            "put": {
                "description": "Update occupation detail by ID",
                "tags": [
                    "occupation"
                ],
                "summary": "Update occupation detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Occupation ID",
                        "name": "occupationID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Occupation detail data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateOccupationDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/ocr/process-family-card": {
            "post": {
                "description": "Process OCR for family card",
                "tags": [
                    "customers"
                ],
                "summary": "Process family card OCR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "OCR data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ProcessFamilyCardOCRRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/ocr/process-identity-card": {
            "post": {
                "description": "Process OCR for identity card",
                "tags": [
                    "customers"
                ],
                "summary": "Process identity card OCR",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "OCR data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ProcessIdentityCardOCRRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/offer-data": {
            "get": {
                "description": "Get offer document data",
                "tags": [
                    "customers"
                ],
                "summary": "Get offer document data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domains.OfferDocumentData"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/personal-data": {
            "get": {
                "description": "Get personal data by customer ID",
                "tags": [
                    "customers"
                ],
                "summary": "Get customer personal data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update personal data for a customer",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer personal data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Personal data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdatePersonalData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/selfie": {
            "patch": {
                "description": "Update selfie image for a customer",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer selfie image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Selfie image",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SelfieImageData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.DocumentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/spouse": {
            "post": {
                "description": "Upsert spouse customer data",
                "tags": [
                    "customers"
                ],
                "summary": "Upsert spouse customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Spouse data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AddSpouseCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/sub-customer": {
            "get": {
                "description": "Get sub customer data",
                "tags": [
                    "customers"
                ],
                "summary": "Get sub customer data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/update-manual": {
            "put": {
                "description": "Update customer manually",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer manually",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Manual update",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCustomerManual"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/customers/{customerID}/with-property": {
            "patch": {
                "description": "Update customer and property data",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer with property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer and property data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCustomerWithPropertyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/districts/{districtID}/villages": {
            "get": {
                "description": "Get all villages in a district",
                "tags": [
                    "locations"
                ],
                "summary": "Get all villages by district ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "District ID",
                        "name": "districtID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/documents": {
            "post": {
                "description": "Create a new document",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Create document",
                "parameters": [
                    {
                        "description": "Document data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateDocument"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.DocumentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/documents/all/{id}": {
            "get": {
                "description": "Get all documents by customer ID",
                "tags": [
                    "documents"
                ],
                "summary": "Get all customer documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/documents/delete/by-reference-and-document-types": {
            "delete": {
                "description": "Delete documents by customer and document types",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "documents"
                ],
                "summary": "Delete documents by customer and document types",
                "parameters": [
                    {
                        "description": "Delete params",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DeleteDocumentsByCustomerAndDocumentTypesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/documents/personal-data/{id}": {
            "get": {
                "description": "Get personal data documents by customer ID",
                "tags": [
                    "documents"
                ],
                "summary": "Get customer personal data documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/documents/{id}": {
            "delete": {
                "description": "Delete a document by its ID",
                "tags": [
                    "documents"
                ],
                "summary": "Delete document by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/master-data": {
            "get": {
                "description": "Get all master data",
                "tags": [
                    "master-data"
                ],
                "summary": "Get all master data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.MasterDataResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/master-data/code/{code}": {
            "get": {
                "description": "Get master data by code",
                "tags": [
                    "master-data"
                ],
                "summary": "Get master data by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Master Data Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.MasterDataResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/occupation-types": {
            "get": {
                "description": "Get all occupation types",
                "tags": [
                    "occupation-types"
                ],
                "summary": "Get all occupation types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.OccupationTypeResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/occupation-types/code/{code}": {
            "get": {
                "description": "Get occupation type by code",
                "tags": [
                    "occupation-types"
                ],
                "summary": "Get occupation type by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Occupation Type Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.OccupationTypeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/occupation/customer/{customer-id}/documents": {
            "get": {
                "description": "Get all documents for a customer",
                "tags": [
                    "occupation"
                ],
                "summary": "Get customer documents by customer ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.DocumentResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/properties/valuation-prediction": {
            "get": {
                "description": "Predict property valuation",
                "tags": [
                    "properties"
                ],
                "summary": "Property valuation prediction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/properties/{customerID}": {
            "post": {
                "description": "Store a new property for a customer",
                "tags": [
                    "properties"
                ],
                "summary": "Store property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Property data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AddNewProperty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.PropertyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/properties/{customerID}/details": {
            "get": {
                "description": "Get property details by customer ID",
                "tags": [
                    "properties"
                ],
                "summary": "Get property details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/properties/{customerID}/documents": {
            "get": {
                "description": "Get property documents by customer ID",
                "tags": [
                    "properties"
                ],
                "summary": "Get property documents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/properties/{customerID}/upsert": {
            "post": {
                "description": "Upsert (insert/update) customer property",
                "tags": [
                    "properties"
                ],
                "summary": "Upsert customer property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Property data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpsertCustomerPropertyParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/properties/{customerID}/{propertyID}": {
            "get": {
                "description": "Get property by customer and property ID",
                "tags": [
                    "properties"
                ],
                "summary": "Get property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update property details for a customer",
                "tags": [
                    "properties"
                ],
                "summary": "Update property details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Property detail data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdatePropertyDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/property-certificate-types": {
            "get": {
                "description": "Get all property certificate types",
                "tags": [
                    "property-certificate-types"
                ],
                "summary": "Get all property certificate types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.PropertyCertificateTypeResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/property-certificate-types/code/{code}": {
            "get": {
                "description": "Get property certificate type by code",
                "tags": [
                    "property-certificate-types"
                ],
                "summary": "Get property certificate type by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Property Certificate Type Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.PropertyCertificateTypeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/property-types": {
            "get": {
                "description": "Get all property types",
                "tags": [
                    "property-types"
                ],
                "summary": "Get all property types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.BasicPropertyTypeResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/property-types/code/{code}": {
            "get": {
                "description": "Get property type by code",
                "tags": [
                    "property-types"
                ],
                "summary": "Get property type by code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Property Type Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.BasicPropertyTypeResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/provinces": {
            "get": {
                "description": "Get all provinces",
                "tags": [
                    "locations"
                ],
                "summary": "Get all provinces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.ProvinceResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/provinces/{provinceID}/cities": {
            "get": {
                "description": "Get all cities in a province",
                "tags": [
                    "locations"
                ],
                "summary": "Get all cities by province ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Province ID",
                        "name": "provinceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.CityResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/public/agents": {
            "post": {
                "description": "Create a new agent using an auth key",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "agents"
                ],
                "summary": "Create agent with auth key (public)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/presenters.BasicAgentResponseWithCompanyName"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/public/agents/company": {
            "get": {
                "description": "Get list of public company agents",
                "tags": [
                    "company-agents"
                ],
                "summary": "Get public company agents",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/presenters.PublicCompanyAgentResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/customers/{customerID}": {
            "put": {
                "description": "Update customer by ID (v2)",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer v2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/customers/{customerID}/gov-data": {
            "put": {
                "description": "Update government data for a customer",
                "tags": [
                    "customers"
                ],
                "summary": "Update customer government data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Government data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.EditCustomerGovernmentBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/customers/{customerID}/occupations/{occupationID}": {
            "put": {
                "description": "Update occupation by ID (v2)",
                "tags": [
                    "occupation"
                ],
                "summary": "Update occupation v2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Occupation ID",
                        "name": "occupationID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Occupation data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateOccupationV2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v2/customers/{customerID}/properties/{propertyID}": {
            "put": {
                "description": "Update property (v2)",
                "tags": [
                    "properties"
                ],
                "summary": "Update property v2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Property data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdatePropertyV2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v3/occupation/customer/income": {
            "put": {
                "description": "Upsert (insert/update) customer income",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "occupation"
                ],
                "summary": "Upsert customer income",
                "parameters": [
                    {
                        "description": "Customer Occupations",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/requests.CustomerOccupationsParams"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v3/occupation/customer/{customer-id}/income": {
            "get": {
                "description": "Get all occupations/income for a customer",
                "tags": [
                    "occupation"
                ],
                "summary": "Get customer income by customer ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StandardResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {}
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domains.OfferDocumentData": {
            "type": "object",
            "properties": {
                "creditor": {
                    "$ref": "#/definitions/domains.Person"
                },
                "creditor_spouse": {
                    "$ref": "#/definitions/domains.Person"
                },
                "property_certificate": {
                    "type": "string"
                },
                "property_certificate_number": {
                    "type": "string"
                },
                "property_owner": {
                    "$ref": "#/definitions/domains.Person"
                },
                "property_owner_relation": {
                    "type": "string"
                },
                "property_owner_spouse": {
                    "$ref": "#/definitions/domains.Person"
                }
            }
        },
        "domains.Person": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/domains.PersonAddress"
                },
                "birth_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "government_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "domains.PersonAddress": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "presenters.AddressResponse": {
            "type": "object",
            "properties": {
                "address_link": {
                    "type": "string"
                },
                "address_type": {
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/presenters.CityResponse"
                },
                "country_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "$ref": "#/definitions/presenters.DistrictResponse"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location_gmap": {
                    "$ref": "#/definitions/presenters.Coordinate"
                },
                "province": {
                    "$ref": "#/definitions/presenters.ProvinceResponse"
                },
                "street": {
                    "type": "string"
                },
                "street_2": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "village": {
                    "$ref": "#/definitions/presenters.VillageResponse"
                },
                "village_id": {
                    "type": "string"
                }
            }
        },
        "presenters.AgentResponse": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.AddressResponse"
                    }
                },
                "bank_name": {
                    "type": "string"
                },
                "customer_register_agent_referral_link": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicDocumentResponse"
                    }
                },
                "domicile": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "identity_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partner_form_agent_referral_link": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "referral_code": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tax_identity_number": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicAgentResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicAgentResponseWithCompanyName": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "customer_register_agent_referral_link": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "partner_form_agent_referral_link": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "referral_code": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicCertificateOwnerConsentTypeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_owner_present": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicCompanyAgentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pic_email": {
                    "type": "string"
                },
                "pic_name": {
                    "type": "string"
                },
                "pic_phone_number": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicCustomerResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicDocumentResponse": {
            "type": "object",
            "properties": {
                "document_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "presign_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicFormMasterDataResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicOccupationTypeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicPropertyCertificateTypeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.BasicPropertyTypeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.BusinessSectorResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.CityResponse": {
            "type": "object",
            "properties": {
                "districts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.DistrictResponse"
                    }
                },
                "id": {
                    "type": "string"
                },
                "is_reach_available": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "province_id": {
                    "type": "string"
                }
            }
        },
        "presenters.CompanyAgentRepsonse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "$ref": "#/definitions/presenters.AddressResponse"
                },
                "customer_register_agent_referral_link": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "member_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "partner_form_agent_referral_link": {
                    "type": "string"
                },
                "pic_email": {
                    "type": "string"
                },
                "pic_name": {
                    "type": "string"
                },
                "pic_phone_number": {
                    "type": "string"
                },
                "referral_code": {
                    "type": "string"
                },
                "relationship_managers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.RelationshipManagerResponse"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "presenters.Coordinate": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "presenters.CustomerEmergencyContactRelationshipResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "relation": {
                    "type": "string"
                },
                "relation_display_name": {
                    "type": "string"
                }
            }
        },
        "presenters.CustomerEmergencyContactResponse": {
            "type": "object",
            "properties": {
                "emergency_contact_relationship": {
                    "$ref": "#/definitions/presenters.CustomerEmergencyContactRelationshipResponse"
                },
                "id": {
                    "type": "string"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "presenters.DistrictResponse": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.DocumentResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "presign_url": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "presenters.GenericAgentResponse": {
            "type": "object",
            "properties": {
                "agent_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "referral_code": {
                    "type": "string"
                },
                "relationship_managers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.RelationshipManagerResponse"
                    }
                }
            }
        },
        "presenters.MasterDataResponse": {
            "type": "object",
            "properties": {
                "business_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "business_sectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "certificate_owner_consent_type": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicCertificateOwnerConsentTypeResponse"
                    }
                },
                "certificate_owner_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "collateralized_certificate_status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "education_level": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "emergency_contact_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "employment_contract_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "employment_document_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "employment_length_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "estimated_revenue_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "family_card_address_occupants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "job_industries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "legal_entity_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "marital_status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "occupation_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicOccupationTypeResponse"
                    }
                },
                "professional_field_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "professional_status_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "property_certificate_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicPropertyCertificateTypeResponse"
                    }
                },
                "property_resident": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                },
                "property_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicPropertyTypeResponse"
                    }
                },
                "provinces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.ProvinceResponse"
                    }
                },
                "signing_checklists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicFormMasterDataResponse"
                    }
                }
            }
        },
        "presenters.OccupationTypeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.PropertyCertificateTypeResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.PropertyResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/presenters.AddressResponse"
                },
                "building_area": {
                    "type": "number"
                },
                "certificate_number": {
                    "type": "string"
                },
                "certificate_owner": {
                    "type": "string"
                },
                "certificate_owner_detail": {
                    "type": "string"
                },
                "certificate_owner_presence": {
                    "type": "string"
                },
                "certificate_type": {
                    "$ref": "#/definitions/presenters.BasicPropertyCertificateTypeResponse"
                },
                "certificate_type_detail": {
                    "type": "string"
                },
                "certificate_type_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/presenters.BasicCustomerResponse"
                },
                "customer_id": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BasicDocumentResponse"
                    }
                },
                "estimated_price_amount": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "is_certificate_on_collateralized": {
                    "type": "string"
                },
                "is_owner_present": {
                    "type": "boolean"
                },
                "is_property_inhabited": {
                    "type": "boolean"
                },
                "njop_amount": {
                    "type": "number"
                },
                "property_resident": {
                    "type": "string"
                },
                "property_type": {
                    "$ref": "#/definitions/presenters.BasicPropertyTypeResponse"
                },
                "property_type_detail": {
                    "type": "string"
                },
                "property_type_id": {
                    "type": "string"
                },
                "surface_area": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "presenters.ProvinceResponse": {
            "type": "object",
            "properties": {
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.CityResponse"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.PublicCompanyAgentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.RelationshipManagerResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "presenters.VillageResponse": {
            "type": "object",
            "properties": {
                "district_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "requests.AddNewAddress": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "street": {
                    "type": "string"
                },
                "street_2": {
                    "type": "string"
                },
                "village_id": {
                    "type": "string"
                }
            }
        },
        "requests.AddNewProperty": {
            "type": "object",
            "required": [
                "address",
                "certificate_owner",
                "certificate_type_id",
                "estimated_price_amount",
                "is_certificate_on_collateralized",
                "property_type_id"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/requests.AddNewAddress"
                },
                "certificate_owner": {
                    "type": "string",
                    "enum": [
                        "myself",
                        "partner",
                        "parents",
                        "siblings",
                        "parents_in_law",
                        "friend",
                        "previous_owner",
                        "extended_family",
                        "others"
                    ]
                },
                "certificate_owner_detail": {
                    "type": "string"
                },
                "certificate_owner_presence": {
                    "type": "string",
                    "enum": [
                        "present_and_agree",
                        "not_present_and_deceased",
                        "not_present_and_deceased_with_inheritance_letter",
                        "not_present_and_agree",
                        "not_present_and_not_agree"
                    ]
                },
                "certificate_type_detail": {
                    "type": "string"
                },
                "certificate_type_id": {
                    "type": "string"
                },
                "estimated_price_amount": {
                    "type": "number"
                },
                "is_certificate_on_collateralized": {
                    "type": "string",
                    "enum": [
                        "yes_for_house_loan",
                        "yes_for_others",
                        "no"
                    ]
                },
                "is_owner_present": {
                    "type": "boolean"
                },
                "property_type_detail": {
                    "type": "string"
                },
                "property_type_id": {
                    "type": "string"
                }
            }
        },
        "requests.AddOrEditCustomer": {
            "type": "object"
        },
        "requests.AddSpouseCustomer": {
            "type": "object",
            "required": [
                "address",
                "email",
                "identity_number",
                "name",
                "phone_number"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "minLength": 8
                },
                "email": {
                    "type": "string"
                },
                "identity_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "requests.AdditionalIdentity": {
            "type": "object",
            "properties": {
                "identity_number": {
                    "type": "string"
                },
                "is_property_owner": {
                    "type": "boolean"
                },
                "is_spouse": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "requests.Address": {
            "type": "object",
            "properties": {
                "is_spouse": {
                    "type": "boolean"
                },
                "street": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "village": {
                    "type": "string"
                }
            }
        },
        "requests.ConsentType": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "requests.CreateCompanyAgent": {
            "type": "object",
            "required": [
                "name",
                "pic_address",
                "village_id"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "pic_address": {
                    "type": "string"
                },
                "pic_email": {
                    "type": "string"
                },
                "pic_name": {
                    "type": "string"
                },
                "pic_phone_number": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                },
                "referral_code": {
                    "type": "string",
                    "maxLength": 20
                },
                "relationship_managers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.RelationshipManagerRequest"
                    }
                },
                "territory_district_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "village_id": {
                    "type": "string"
                }
            }
        },
        "requests.CreateCustomerAndRelatedAddressRequest": {
            "type": "object",
            "properties": {
                "customer_address": {
                    "$ref": "#/definitions/requests.CustomerAddress"
                },
                "family_card_address": {
                    "$ref": "#/definitions/requests.FamilyCardAddress"
                },
                "property_address": {
                    "$ref": "#/definitions/requests.PropertyAddress"
                }
            }
        },
        "requests.CreateCustomerEmergencyContactParams": {
            "type": "object",
            "required": [
                "consent_types",
                "emergency_contacts"
            ],
            "properties": {
                "consent_types": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/requests.ConsentType"
                    }
                },
                "emergency_contacts": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/requests.CustomerEmergencyContact"
                    }
                }
            }
        },
        "requests.CreateCustomerWithPropertyParams": {
            "type": "object",
            "required": [
                "email",
                "name",
                "phone_number"
            ],
            "properties": {
                "consented_at": {
                    "type": "integer",
                    "minimum": 0
                },
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "income": {
                    "type": "number",
                    "minimum": 0
                },
                "marital_status": {
                    "type": "string",
                    "enum": [
                        "single",
                        "married",
                        "divorced",
                        "widowed"
                    ]
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                },
                "property": {
                    "$ref": "#/definitions/requests.PropertyParams"
                },
                "spouse_income": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "requests.CreateDocument": {
            "type": "object",
            "required": [
                "document_type",
                "entity_id",
                "entity_type",
                "title",
                "url"
            ],
            "properties": {
                "document_type": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "requests.CreateReferralCode": {
            "type": "object",
            "required": [
                "entity_id",
                "entity_type",
                "referral_code"
            ],
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "referral_code": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "requests.CustomerAddress": {
            "type": "object",
            "properties": {
                "street": {
                    "type": "string"
                },
                "village_id": {
                    "type": "string"
                }
            }
        },
        "requests.CustomerEmergencyContact": {
            "type": "object",
            "required": [
                "name",
                "phone_number",
                "relationship_id"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                },
                "relationship_id": {
                    "type": "string"
                }
            }
        },
        "requests.CustomerOccupationsParams": {
            "type": "object",
            "required": [
                "customer_id",
                "occupations"
            ],
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "occupations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.OccupationParams"
                    }
                },
                "self_declared_payment_bandwidth": {
                    "type": "number"
                }
            }
        },
        "requests.DeleteDocumentsByCustomerAndDocumentTypesRequest": {
            "type": "object",
            "properties": {
                "customer_document_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "occupation_document_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "property_document_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "requests.EditCustomerGovernmentBody": {
            "type": "object",
            "required": [
                "date_of_birth",
                "government_id",
                "name"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "government_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                }
            }
        },
        "requests.FamilyCardAddress": {
            "type": "object",
            "properties": {
                "occupants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "street": {
                    "type": "string"
                },
                "village_id": {
                    "type": "string"
                }
            }
        },
        "requests.Identity": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "requests.OccupationParams": {
            "type": "object",
            "required": [
                "occupation_type_id"
            ],
            "properties": {
                "business_address": {
                    "type": "string"
                },
                "business_sector": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "employment_contract_category": {
                    "type": "string"
                },
                "employment_document_type": {
                    "type": "string"
                },
                "employment_length_category": {
                    "type": "string"
                },
                "estimated_revenue_type": {
                    "type": "string"
                },
                "income": {
                    "type": "number",
                    "minimum": 0
                },
                "income_month_2": {
                    "type": "number",
                    "minimum": 0
                },
                "income_month_3": {
                    "type": "number",
                    "minimum": 0
                },
                "income_month_4": {
                    "type": "number",
                    "minimum": 0
                },
                "income_month_5": {
                    "type": "number",
                    "minimum": 0
                },
                "income_month_6": {
                    "type": "number",
                    "minimum": 0
                },
                "is_legitimate_business": {
                    "type": "boolean"
                },
                "is_spouse": {
                    "type": "boolean"
                },
                "job_industry": {
                    "type": "string"
                },
                "legal_entity_type": {
                    "type": "string"
                },
                "occupation_id": {
                    "type": "string"
                },
                "occupation_type_detail": {
                    "type": "string"
                },
                "occupation_type_id": {
                    "type": "string"
                },
                "professional_status_type": {
                    "type": "string"
                }
            }
        },
        "requests.ProcessFamilyCardOCRRequest": {
            "type": "object",
            "properties": {
                "bypass_ocr": {
                    "type": "boolean"
                },
                "family_card_address": {
                    "$ref": "#/definitions/requests.FamilyCardAddress"
                },
                "family_card_document_id": {
                    "type": "string"
                },
                "is_family_card_address_based_on_family_card": {
                    "type": "boolean"
                }
            }
        },
        "requests.ProcessIdentityCardOCRRequest": {
            "type": "object",
            "properties": {
                "bypass_ocr": {
                    "type": "boolean"
                },
                "customer_address": {
                    "$ref": "#/definitions/requests.CustomerAddress"
                },
                "identity_card_document_id": {
                    "type": "string"
                },
                "is_customer_address_based_on_identity_card": {
                    "type": "boolean"
                },
                "is_property_address_based_on_identity_card": {
                    "type": "boolean"
                },
                "property_address": {
                    "$ref": "#/definitions/requests.PropertyAddress"
                }
            }
        },
        "requests.PropertyAddress": {
            "type": "object",
            "properties": {
                "street": {
                    "type": "string"
                },
                "village_id": {
                    "type": "string"
                }
            }
        },
        "requests.PropertyParams": {
            "type": "object",
            "properties": {
                "estimated_property_amount": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "requests.ReferralCodeMigration": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.RelationshipManagerRequest": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "requests.SelfieImageData": {
            "type": "object"
        },
        "requests.SubCustomer": {
            "type": "object",
            "properties": {
                "customer_type": {
                    "type": "string"
                },
                "government_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_property_owner": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateCityReachAvailability": {
            "type": "object",
            "required": [
                "id",
                "is_reach_available"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_reach_available": {
                    "type": "boolean"
                }
            }
        },
        "requests.UpdateCityReachAvailabilityParam": {
            "type": "object",
            "required": [
                "cities"
            ],
            "properties": {
                "cities": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/requests.UpdateCityReachAvailability"
                    }
                }
            }
        },
        "requests.UpdateCompanyAgent": {
            "type": "object",
            "required": [
                "name",
                "pic_address",
                "referral_code",
                "village_id"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "pic_address": {
                    "type": "string"
                },
                "pic_email": {
                    "type": "string"
                },
                "pic_name": {
                    "type": "string"
                },
                "pic_phone_number": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                },
                "referral_code": {
                    "type": "string",
                    "maxLength": 20
                },
                "relationship_managers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.RelationshipManagerRequest"
                    }
                },
                "territory_district_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "village_id": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateCustomer": {
            "type": "object",
            "required": [
                "marital_status"
            ],
            "properties": {
                "additional_identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.AdditionalIdentity"
                    }
                },
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.UpsertAddress"
                    }
                },
                "marital_status": {
                    "type": "string",
                    "enum": [
                        "single",
                        "married",
                        "divorced",
                        "widowed"
                    ]
                }
            }
        },
        "requests.UpdateCustomerAccountMutationPasswordRequest": {
            "type": "object",
            "required": [
                "account_mutation_password"
            ],
            "properties": {
                "account_mutation_password": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "requests.UpdateCustomerDetail": {
            "type": "object",
            "required": [
                "date_of_birth",
                "email",
                "government_id",
                "marital_status",
                "name",
                "phone_number"
            ],
            "properties": {
                "address_link": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "emergency_contact": {
                    "$ref": "#/definitions/requests.CustomerEmergencyContact"
                },
                "government_id": {
                    "type": "string"
                },
                "marital_status": {
                    "type": "string",
                    "enum": [
                        "single",
                        "married",
                        "divorced",
                        "widowed"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                }
            }
        },
        "requests.UpdateCustomerManual": {
            "type": "object",
            "required": [
                "customer_address",
                "date_of_birth",
                "government_id",
                "name"
            ],
            "properties": {
                "customer_address": {
                    "$ref": "#/definitions/requests.CustomerAddress"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "family_card_id": {
                    "type": "string"
                },
                "government_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                },
                "property_address": {
                    "$ref": "#/definitions/requests.PropertyAddress"
                }
            }
        },
        "requests.UpdateCustomerNameAndGovernmentId": {
            "type": "object",
            "required": [
                "government_id",
                "name"
            ],
            "properties": {
                "government_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                }
            }
        },
        "requests.UpdateCustomerWithPropertyParams": {
            "type": "object",
            "required": [
                "email",
                "name",
                "phone_number"
            ],
            "properties": {
                "consented_at": {
                    "type": "integer",
                    "minimum": 0
                },
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "income": {
                    "type": "number",
                    "minimum": 0
                },
                "marital_status": {
                    "type": "string",
                    "enum": [
                        "single",
                        "married",
                        "divorced",
                        "widowed"
                    ]
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                },
                "property": {
                    "$ref": "#/definitions/requests.PropertyParams"
                },
                "spouse_income": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "requests.UpdateOccupationDetail": {
            "type": "object",
            "required": [
                "income",
                "occupation_type_id"
            ],
            "properties": {
                "business_sector": {
                    "type": "string"
                },
                "income": {
                    "type": "number",
                    "minimum": 0
                },
                "is_legitimate_business": {
                    "type": "boolean"
                },
                "occupation_type_detail": {
                    "type": "string"
                },
                "occupation_type_id": {
                    "type": "string"
                },
                "spouse_income": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "requests.UpdateOccupationV2": {
            "type": "object",
            "properties": {
                "business_address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "hr_phone_number": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                },
                "linkedin_profile_url": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "requests.UpdatePersonalData": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.Address"
                    }
                },
                "date_of_birth": {
                    "type": "string"
                },
                "education_level": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.Identity"
                    }
                },
                "marital_status": {
                    "type": "string"
                },
                "mother_maiden_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "sub_customer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/requests.SubCustomer"
                    }
                }
            }
        },
        "requests.UpdatePropertyDetail": {
            "type": "object",
            "required": [
                "is_certificate_on_collateralized"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/requests.AddNewAddress"
                },
                "building_area": {
                    "type": "number"
                },
                "building_permit_image_url": {
                    "type": "string"
                },
                "certificate_image_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificate_number": {
                    "type": "string"
                },
                "certificate_owner": {
                    "type": "string",
                    "enum": [
                        "myself",
                        "partner",
                        "parents",
                        "siblings",
                        "parents_in_law",
                        "friend",
                        "previous_owner",
                        "extended_family",
                        "others"
                    ]
                },
                "certificate_owner_detail": {
                    "type": "string"
                },
                "certificate_owner_presence": {
                    "type": "string",
                    "enum": [
                        "present_and_agree",
                        "not_present_and_deceased",
                        "not_present_and_deceased_with_inheritance_letter",
                        "not_present_and_agree",
                        "not_present_and_not_agree"
                    ]
                },
                "certificate_type_detail": {
                    "type": "string"
                },
                "certificate_type_id": {
                    "type": "string"
                },
                "estimated_price_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "is_certificate_on_collateralized": {
                    "type": "string",
                    "enum": [
                        "yes_for_house_loan",
                        "yes_for_others",
                        "no"
                    ]
                },
                "is_owner_present": {
                    "type": "boolean"
                },
                "is_property_inhabited": {
                    "type": "boolean"
                },
                "land_and_building_tax_image_url": {
                    "type": "string"
                },
                "njop_amount": {
                    "type": "number"
                },
                "property_resident": {
                    "type": "string"
                },
                "property_type_detail": {
                    "type": "string"
                },
                "property_type_id": {
                    "type": "string"
                },
                "surface_area": {
                    "type": "number"
                },
                "tax_return_payable_letter_url": {
                    "type": "string"
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "requests.UpdatePropertyV2": {
            "type": "object",
            "properties": {
                "building_area": {
                    "type": "number"
                },
                "surface_area": {
                    "type": "number"
                }
            }
        },
        "requests.UpdateReferralCode": {
            "type": "object",
            "required": [
                "entity_id",
                "entity_type",
                "referral_code"
            ],
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "referral_code": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        },
        "requests.UpsertAddress": {
            "type": "object",
            "properties": {
                "address_link": {
                    "type": "string"
                },
                "address_type": {
                    "type": "string",
                    "enum": [
                        "domicile",
                        "identity_address",
                        "office"
                    ]
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "requests.UpsertCustomerDataRequest": {
            "type": "object",
            "required": [
                "date_of_birth",
                "email",
                "government_id",
                "name",
                "parent_customer_id",
                "phone_number",
                "street",
                "type",
                "village_id"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "government_id": {
                    "type": "string"
                },
                "is_property_owner": {
                    "type": "boolean"
                },
                "is_spouse": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "minLength": 2
                },
                "parent_customer_id": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 8
                },
                "street": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "village_id": {
                    "type": "string"
                }
            }
        },
        "requests.UpsertCustomerOccupationParams": {
            "type": "object",
            "properties": {
                "business_address": {
                    "type": "string"
                },
                "business_category": {
                    "type": "string"
                },
                "business_sector": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "employment_contract_category": {
                    "type": "string"
                },
                "employment_document_type": {
                    "type": "string"
                },
                "employment_document_type_detail": {
                    "type": "string"
                },
                "employment_length_category": {
                    "type": "string"
                },
                "estimated_revenue_type": {
                    "type": "string"
                },
                "income": {
                    "type": "number"
                },
                "job_industry": {
                    "type": "string"
                },
                "legal_entity_type": {
                    "type": "string"
                },
                "occupation_type_id": {
                    "type": "string"
                },
                "professional_field_type": {
                    "type": "string"
                },
                "professional_status_type": {
                    "type": "string"
                },
                "spouse_income": {
                    "type": "number"
                }
            }
        },
        "requests.UpsertCustomerPropertyParams": {
            "type": "object",
            "required": [
                "certificate_owner",
                "certificate_owner_presence",
                "certificate_type_id",
                "is_certificate_on_collateralized",
                "property_type_id"
            ],
            "properties": {
                "building_area": {
                    "type": "number"
                },
                "certificate_owner": {
                    "type": "string",
                    "enum": [
                        "myself",
                        "partner",
                        "parents",
                        "siblings",
                        "parents_in_law",
                        "friend",
                        "previous_owner",
                        "extended_family",
                        "others"
                    ]
                },
                "certificate_owner_detail": {
                    "type": "string"
                },
                "certificate_owner_presence": {
                    "type": "string",
                    "enum": [
                        "present_and_agree",
                        "not_present_and_deceased",
                        "not_present_and_deceased_with_inheritance_letter",
                        "not_present_and_agree",
                        "not_present_and_not_agree"
                    ]
                },
                "certificate_type_detail": {
                    "type": "string"
                },
                "certificate_type_id": {
                    "type": "string"
                },
                "estimated_price_amount": {
                    "type": "number"
                },
                "is_certificate_on_collateralized": {
                    "type": "string",
                    "enum": [
                        "yes_for_house_loan",
                        "yes_for_others",
                        "no"
                    ]
                },
                "is_owner_present": {
                    "type": "boolean"
                },
                "is_property_inhabited": {
                    "type": "boolean"
                },
                "property_resident": {
                    "type": "string"
                },
                "property_type_detail": {
                    "type": "string"
                },
                "property_type_id": {
                    "type": "string"
                },
                "surface_area": {
                    "type": "number"
                }
            }
        },
        "response.Paginator": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "item_from": {
                    "type": "integer"
                },
                "item_to": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "next_page": {
                    "type": "integer"
                },
                "previous_page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "response.PaginatorResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "paginator": {
                    "$ref": "#/definitions/response.Paginator"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.StandardResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}